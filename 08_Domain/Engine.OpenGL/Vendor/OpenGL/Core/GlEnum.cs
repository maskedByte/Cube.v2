namespace Engine.OpenGL.Vendor.OpenGL.Core;

#pragma warning disable CS1591
internal enum ActiveAttribType
{
    Float = 0x1406,
    FloatVec2 = 0x8B50,
    FloatVec3 = 0x8B51,
    FloatVec4 = 0x8B52,
    FloatMat2 = 0x8B5A,
    FloatMat3 = 0x8B5B,
    FloatMat4 = 0x8B5C
}

internal enum ActiveUniformBlockParameter
{
    UniformBlockBinding = 0x8A3F,
    UniformBlockDataSize = 0x8A40,
    UniformBlockNameLength = 0x8A41,
    UniformBlockActiveUniforms = 0x8A42,
    UniformBlockActiveUniformIndices = 0x8A43,
    UniformBlockReferencedByVertexShader = 0x8A44,
    UniformBlockReferencedByFragmentShader = 0x8A46
}

internal enum ActiveUniformType
{
    Int = 0x1404,
    Float = 0x1406,
    FloatVec2 = 0x8B50,
    FloatVec3 = 0x8B51,
    FloatVec4 = 0x8B52,
    IntVec2 = 0x8B53,
    IntVec3 = 0x8B54,
    IntVec4 = 0x8B55,
    Bool = 0x8B56,
    BoolVec2 = 0x8B57,
    BoolVec3 = 0x8B58,
    BoolVec4 = 0x8B59,
    FloatMat2 = 0x8B5A,
    FloatMat3 = 0x8B5B,
    FloatMat4 = 0x8B5C,
    Sampler1D = 0x8B5D,
    Sampler2D = 0x8B5E,
    Sampler3D = 0x8B5F,
    SamplerCube = 0x8B60,
    Sampler1DShadow = 0x8B61,
    Sampler2DShadow = 0x8B62,
    Sampler2DRect = 0x8B63,
    Sampler2DRectShadow = 0x8B64,
    FloatMat2x3 = 0x8B65,
    FloatMat2x4 = 0x8B66,
    FloatMat3x2 = 0x8B67,
    FloatMat3x4 = 0x8B68,
    FloatMat4x2 = 0x8B69,
    FloatMat4x3 = 0x8B6A,
    Sampler1DArray = 0x8DC0,
    Sampler2DArray = 0x8DC1,
    SamplerBuffer = 0x8DC2,
    Sampler1DArrayShadow = 0x8DC3,
    Sampler2DArrayShadow = 0x8DC4,
    SamplerCubeShadow = 0x8DC5,
    UnsignedIntVec2 = 0x8DC6,
    UnsignedIntVec3 = 0x8DC7,
    UnsignedIntVec4 = 0x8DC8,
    IntSampler1D = 0x8DC9,
    IntSampler2D = 0x8DCA,
    IntSampler3D = 0x8DCB,
    IntSamplerCube = 0x8DCC,
    IntSampler2DRect = 0x8DCD,
    IntSampler1DArray = 0x8DCE,
    IntSampler2DArray = 0x8DCF,
    IntSamplerBuffer = 0x8DD0,
    UnsignedIntSampler1D = 0x8DD1,
    UnsignedIntSampler2D = 0x8DD2,
    UnsignedIntSampler3D = 0x8DD3,
    UnsignedIntSamplerCube = 0x8DD4,
    UnsignedIntSampler2DRect = 0x8DD5,
    UnsignedIntSampler1DArray = 0x8DD6,
    UnsignedIntSampler2DArray = 0x8DD7,
    UnsignedIntSamplerBuffer = 0x8DD8,
    Sampler2DMultisample = 0x9108,
    IntSampler2DMultisample = 0x9109,
    UnsignedIntSampler2DMultisample = 0x910A,
    Sampler2DMultisampleArray = 0x910B,
    IntSampler2DMultisampleArray = 0x910C,
    UnsignedIntSampler2DMultisampleArray = 0x910D
}

internal enum ArbSync
{
    SyncFlushCommandsBit = 0x00000001,
    MaxServerWaitTimeout = 0x9111,
    ObjectType = 0x9112,
    SyncCondition = 0x9113,
    SyncStatus = 0x9114,
    SyncFlags = 0x9115,
    SyncFence = 0x9116,
    SyncGpuCommandsComplete = 0x9117,
    Unsignaled = 0x9118,
    Signaled = 0x9119,
    AlreadySignaled = 0x911A,
    TimeoutExpired = 0x911B,
    ConditionSatisfied = 0x911C,
    WaitFailed = 0x911D,
    TimeoutIgnored = unchecked((int)0xFFFFFFFFFFFFFFFF)
}

internal enum AtomicCounterParameterName
{
    AtomicCounterBufferBinding = 0x92C1,
    AtomicCounterBufferDataSize = 0x92C4,
    AtomicCounterBufferActiveAtomicCounters = 0x92C5,
    AtomicCounterBufferActiveAtomicCounterIndices = 0x92C6,
    AtomicCounterBufferReferencedByVertexShader = 0x92C7,
    AtomicCounterBufferReferencedByTessControlShader = 0x92C8,
    AtomicCounterBufferReferencedByTessEvaluationShader = 0x92C9,
    AtomicCounterBufferReferencedByGeometryShader = 0x92CA,
    AtomicCounterBufferReferencedByFragmentShader = 0x92CB,
    AtomicCounterBufferReferencedByComputeShader = 0x90ED
}

internal enum BeginFeedbackMode
{
    Points = 0x0000,
    Lines = 0x0001,
    Triangles = 0x0004
}

internal enum BeginMode
{
    Points = 0x0000,
    Lines = 0x0001,
    LineLoop = 0x0002,
    LineStrip = 0x0003,
    Triangles = 0x0004,
    TriangleStrip = 0x0005,
    TriangleFan = 0x0006,
    LinesAdjacency = 0xA,
    LineStripAdjacency = 0xB,
    TrianglesAdjacency = 0xC,
    TriangleStripAdjacency = 0xD,
    Patches = 0xE,

    [Obsolete("OpenGL 4 Core does not support quads.")]
    Quads = 0x0007,

    [Obsolete("OpenGL 4 Core does not support quads.")]
    QuadStrip = 0x0008
}

internal enum BlendEquationMode
{
    FuncAdd = 0x8006,
    Min = 0x8007,
    Max = 0x8008,
    FuncSubtract = 0x800A,
    FuncReverseSubtract = 0x800B
}

internal enum BlendingFactorDest
{
    Zero = 0,
    SrcColor = 0x0300,
    OneMinusSrcColor = 0x0301,
    SrcAlpha = 0x0302,
    OneMinusSrcAlpha = 0x0303,
    DstAlpha = 0x0304,
    OneMinusDstAlpha = 0x0305,
    DstColor = 0x0306,
    OneMinusDstColor = 0x0307,
    ConstantColor = 0x8001,
    ConstantColorExt = 0x8001,
    OneMinusConstantColor = 0x8002,
    OneMinusConstantColorExt = 0x8002,
    ConstantAlpha = 0x8003,
    ConstantAlphaExt = 0x8003,
    OneMinusConstantAlpha = 0x8004,
    OneMinusConstantAlphaExt = 0x8004,
    One = 1
}

internal enum BlendingFactorSrc
{
    Zero = 0,
    SrcAlpha = 0x0302,
    OneMinusSrcAlpha = 0x0303,
    DstAlpha = 0x0304,
    OneMinusDstAlpha = 0x0305,
    DstColor = 0x0306,
    OneMinusDstColor = 0x0307,
    SrcAlphaSaturate = 0x0308,
    ConstantColor = 0x8001,
    ConstantColorExt = 0x8001,
    OneMinusConstantColor = 0x8002,
    OneMinusConstantColorExt = 0x8002,
    ConstantAlpha = 0x8003,
    ConstantAlphaExt = 0x8003,
    OneMinusConstantAlpha = 0x8004,
    OneMinusConstantAlphaExt = 0x8004,
    One = 1
}

internal enum BlitFramebufferFilter
{
    Nearest = 0x2600,
    Linear = 0x2601
}

internal enum BufferAccess
{
    ReadOnly = 0x88B8,
    WriteOnly = 0x88B9,
    ReadWrite = 0x88BA
}

[Flags]
internal enum BufferAccessMask
{
    MapReadBit = 0x0001,
    MapWriteBit = 0x0002,
    MapInvalidateRangeBit = 0x0004,
    MapInvalidateBufferBit = 0x0008,
    MapFlushExplicitBit = 0x0010,
    MapUnsynchronizedBit = 0x0020
}

internal enum BufferParameterName
{
    BufferSize = 0x8764,
    BufferUsage = 0x8765,
    BufferAccess = 0x88BB,
    BufferMapped = 0x88BC
}

internal enum BufferPointer
{
    BufferMapPointer = 0x88BD
}

internal enum BufferTarget
{
    ArrayBuffer = 0x8892,
    ElementArrayBuffer = 0x8893,
    PixelPackBuffer = 0x88EB,
    PixelUnpackBuffer = 0x88EC,
    UniformBuffer = 0x8A11,
    TextureBuffer = 0x8C2A,
    TransformFeedbackBuffer = 0x8C8E,
    CopyReadBuffer = 0x8F36,
    CopyWriteBuffer = 0x8F37,
    DrawIndirectBuffer = 0x8F3F,
    AtomicCounterBuffer = 0x92C0,
    DispatchIndirectBuffer = 0x90EE,
    QueryBuffer = 0x9192,
    ShaderStorageBuffer = 0x90D2
}

internal enum BufferUsageHint
{
    StreamDraw = 0x88E0,
    StreamRead = 0x88E1,
    StreamCopy = 0x88E2,
    StaticDraw = 0x88E4,
    StaticRead = 0x88E5,
    StaticCopy = 0x88E6,
    DynamicDraw = 0x88E8,
    DynamicRead = 0x88E9,
    DynamicCopy = 0x88EA
}

internal enum ClampColorMode
{
    False = 0,
    FixedOnly = 0x891D,
    True = 1
}

internal enum ClampColorTarget
{
    ClampVertexColor = 0x891A,
    ClampFragmentColor = 0x891B,
    ClampReadColor = 0x891C
}

internal enum ClearBuffer
{
    Color = 0x1800,
    Depth = 0x1801,
    Stencil = 0x1802,
    DepthStencil = 0x84F9
}

[Flags]
internal enum ClearBufferMask
{
    None = 0x00000000,
    DepthBufferBit = 0x00000100,
    AccumBufferBit = 0x00000200,
    StencilBufferBit = 0x00000400,
    ColorBufferBit = 0x00004000
}

internal enum ClipControlOrigin
{
    LowerLeft = 0x8CA1,
    UpperLeft = 0x8CA2
}

internal enum ClipControlDepth
{
    NegativeOneToOne = 0x935E,
    ZeroToOne = 0x935F
}

internal enum ConditionalRenderType
{
    QueryWait = 0x8E13,
    QueryNoWait = 0x8E14,
    QueryByRegionWait = 0x8E15,
    QueryByRegionNoWait = 0x8E16
}

internal enum CullFaceMode
{
    Front = 0x0404,
    Back = 0x0405,
    FrontAndBack = 0x0408
}

internal enum DepthFunction
{
    Never = 0x0200,
    Less = 0x0201,
    Equal = 0x0202,
    Lequal = 0x0203,
    Greater = 0x0204,
    Notequal = 0x0205,
    Gequal = 0x0206,
    Always = 0x0207
}

internal enum DrawBuffersEnum
{
    None = 0,
    FrontLeft = 0x0400,
    FrontRight = 0x0401,
    BackLeft = 0x0402,
    BackRight = 0x0403,
    Aux0 = 0x0409,
    Aux1 = 0x040A,
    Aux2 = 0x040B,
    Aux3 = 0x040C,
    ColorAttachment0 = 0x8CE0,
    ColorAttachment1 = 0x8CE1,
    ColorAttachment2 = 0x8CE2,
    ColorAttachment3 = 0x8CE3,
    ColorAttachment4 = 0x8CE4,
    ColorAttachment5 = 0x8CE5,
    ColorAttachment6 = 0x8CE6,
    ColorAttachment7 = 0x8CE7,
    ColorAttachment8 = 0x8CE8,
    ColorAttachment9 = 0x8CE9,
    ColorAttachment10 = 0x8CEA,
    ColorAttachment11 = 0x8CEB,
    ColorAttachment12 = 0x8CEC,
    ColorAttachment13 = 0x8CED,
    ColorAttachment14 = 0x8CEE,
    ColorAttachment15 = 0x8CEF
}

internal enum DrawBufferMode
{
    None = 0,
    FrontLeft = 0x0400,
    FrontRight = 0x0401,
    BackLeft = 0x0402,
    BackRight = 0x0403,
    Front = 0x0404,
    Back = 0x0405,
    Left = 0x0406,
    Right = 0x0407,
    FrontAndBack = 0x0408,
    Aux0 = 0x0409,
    Aux1 = 0x040A,
    Aux2 = 0x040B,
    Aux3 = 0x040C,
    ColorAttachment0 = 0x8CE0,
    ColorAttachment1 = 0x8CE1,
    ColorAttachment2 = 0x8CE2,
    ColorAttachment3 = 0x8CE3,
    ColorAttachment4 = 0x8CE4,
    ColorAttachment5 = 0x8CE5,
    ColorAttachment6 = 0x8CE6,
    ColorAttachment7 = 0x8CE7,
    ColorAttachment8 = 0x8CE8,
    ColorAttachment9 = 0x8CE9,
    ColorAttachment10 = 0x8CEA,
    ColorAttachment11 = 0x8CEB,
    ColorAttachment12 = 0x8CEC,
    ColorAttachment13 = 0x8CED,
    ColorAttachment14 = 0x8CEE,
    ColorAttachment15 = 0x8CEF
}

internal enum DrawElementsType
{
    UnsignedByte = 0x1401,
    UnsignedShort = 0x1403,
    UnsignedInt = 0x1405
}

internal enum EnableCap
{
    //PointSmooth = ((int)0x0B10),
    LineSmooth = 0x0B20,

    //LineStipple = ((int)0x0B24),
    PolygonSmooth = 0x0B41,

    //PolygonStipple = ((int)0x0B42),
    CullFace = 0x0B44,

    //Lighting = ((int)0x0B50),
    //ColorMaterial = ((int)0x0B57),
    //Fog = ((int)0x0B60),
    DepthTest = 0x0B71,
    StencilTest = 0x0B90,

    //Normalize = ((int)0x0BA1),
    //AlphaTest = ((int)0x0BC0),
    Dither = 0x0BD0,
    Blend = 0x0BE2,
    IndexLogicOp = 0x0BF1,
    ColorLogicOp = 0x0BF2,
    ScissorTest = 0x0C11,

    /*TextureGenS = ((int)0x0C60),
    TextureGenT = ((int)0x0C61),
    TextureGenR = ((int)0x0C62),
    TextureGenQ = ((int)0x0C63),*/
    AutoNormal = 0x0D80,
    Map1Color4 = 0x0D90,
    Map1Index = 0x0D91,
    Map1Normal = 0x0D92,
    Map1TextureCoord1 = 0x0D93,
    Map1TextureCoord2 = 0x0D94,
    Map1TextureCoord3 = 0x0D95,
    Map1TextureCoord4 = 0x0D96,
    Map1Vertex3 = 0x0D97,
    Map1Vertex4 = 0x0D98,
    Map2Color4 = 0x0DB0,
    Map2Index = 0x0DB1,
    Map2Normal = 0x0DB2,
    Map2TextureCoord1 = 0x0DB3,
    Map2TextureCoord2 = 0x0DB4,
    Map2TextureCoord3 = 0x0DB5,
    Map2TextureCoord4 = 0x0DB6,
    Map2Vertex3 = 0x0DB7,
    Map2Vertex4 = 0x0DB8,
    Texture1D = 0x0DE0,
    Texture2D = 0x0DE1,
    PolygonOffsetPoint = 0x2A01,
    PolygonOffsetLine = 0x2A02,
    ClipPlane0 = 0x3000,
    ClipPlane1 = 0x3001,
    ClipPlane2 = 0x3002,
    ClipPlane3 = 0x3003,
    ClipPlane4 = 0x3004,
    ClipPlane5 = 0x3005,

    /*Light0 = ((int)0x4000),
    Light1 = ((int)0x4001),
    Light2 = ((int)0x4002),
    Light3 = ((int)0x4003),
    Light4 = ((int)0x4004),
    Light5 = ((int)0x4005),
    Light6 = ((int)0x4006),
    Light7 = ((int)0x4007),*/
    Convolution1D = 0x8010,
    Convolution1DExt = 0x8010,
    Convolution2D = 0x8011,
    Convolution2DExt = 0x8011,
    Separable2D = 0x8012,
    Separable2DExt = 0x8012,
    Histogram = 0x8024,
    HistogramExt = 0x8024,
    MinmaxExt = 0x802E,
    PolygonOffsetFill = 0x8037,

    //RescaleNormal = ((int)0x803A),
    RescaleNormalExt = 0x803A,
    Texture3DExt = 0x806F,
    VertexArray = 0x8074,
    NormalArray = 0x8075,
    ColorArray = 0x8076,
    IndexArray = 0x8077,
    TextureCoordArray = 0x8078,
    EdgeFlagArray = 0x8079,
    InterlaceSgix = 0x8094,
    Multisample = 0x809D,
    SampleAlphaToCoverage = 0x809E,
    SampleAlphaToMaskSgis = 0x809E,
    SampleAlphaToOne = 0x809F,
    SampleAlphaToOneSgis = 0x809F,
    SampleCoverage = 0x80A0,
    SampleMaskSgis = 0x80A0,
    TextureColorTableSgi = 0x80BC,
    ColorTable = 0x80D0,
    ColorTableSgi = 0x80D0,
    PostConvolutionColorTable = 0x80D1,
    PostConvolutionColorTableSgi = 0x80D1,
    PostColorMatrixColorTable = 0x80D2,
    PostColorMatrixColorTableSgi = 0x80D2,
    Texture4DSgis = 0x8134,
    PixelTexGenSgix = 0x8139,
    SpriteSgix = 0x8148,
    ReferencePlaneSgix = 0x817D,
    IrInstrument1Sgix = 0x817F,
    CalligraphicFragmentSgix = 0x8183,
    FramezoomSgix = 0x818B,
    FogOffsetSgix = 0x8198,
    SharedTexturePaletteExt = 0x81FB,
    AsyncHistogramSgix = 0x832C,
    PixelTextureSgis = 0x8353,
    AsyncTexImageSgix = 0x835C,
    AsyncDrawPixelsSgix = 0x835D,
    AsyncReadPixelsSgix = 0x835E,
    FragmentLightingSgix = 0x8400,
    FragmentColorMaterialSgix = 0x8401,
    FragmentLight0Sgix = 0x840C,
    FragmentLight1Sgix = 0x840D,
    FragmentLight2Sgix = 0x840E,
    FragmentLight3Sgix = 0x840F,
    FragmentLight4Sgix = 0x8410,
    FragmentLight5Sgix = 0x8411,
    FragmentLight6Sgix = 0x8412,
    FragmentLight7Sgix = 0x8413,

    //FogCoordArray = ((int)0x8457),
    ColorSum = 0x8458,
    SecondaryColorArray = 0x845E,
    TextureCubeMap = 0x8513,
    ProgramPointSize = 0x8642,
    VertexProgramPointSize = 0x8642,

    //VertexProgramTwoSide = ((int)0x8643),
    DepthClamp = 0x864F,
    TextureCubeMapSeamless = 0x884F,
    PointSprite = 0x8861,
    RasterizerDiscard = 0x8C89,
    FramebufferSrgb = 0x8DB9,
    SampleMask = 0x8E51,
    PrimitiveRestart = 0x8F9D
}

internal enum ErrorCode
{
    NoError = 0,
    InvalidEnum = 0x0500,
    InvalidValue = 0x0501,
    InvalidOperation = 0x0502,
    StackOverflow = 0x0503,
    StackUnderflow = 0x0504,
    OutOfMemory = 0x0505,
    InvalidFramebufferOperation = 0x0506,
    InvalidFramebufferOperationExt = 0x0506,
    TableTooLargeExt = 0x8031,
    TextureTooLargeExt = 0x8065
}

internal enum Extension
{
    GL_ARB_multitexture = 0,
    GLX_ARB_get_proc_address = 1,
    GL_ARB_transpose_matrix = 2,
    WGL_ARB_buffer_region = 3,
    GL_ARB_multisample = 4,
    GLX_ARB_multisample = 5,
    WGL_ARB_multisample = 6,
    GL_ARB_texture_env_add = 7,
    GL_ARB_texture_cube_map = 8,
    WGL_ARB_extensions_string = 9,
    WGL_ARB_pixel_format = 10,
    WGL_ARB_make_current_read = 11,
    WGL_ARB_pbuffer = 12,
    GL_ARB_texture_compression = 13,
    GL_ARB_texture_border_clamp = 14,
    GL_ARB_point_parameters = 15,
    GL_ARB_vertex_blend = 16,
    GL_ARB_matrix_palette = 17,
    GL_ARB_texture_env_combine = 18,
    GL_ARB_texture_env_crossbar = 19,
    GL_ARB_texture_env_dot3 = 20,
    WGL_ARB_render_texture = 21,
    GL_ARB_texture_mirrored_repeat = 22,
    GL_ARB_depth_texture = 23,
    GL_ARB_shadow = 24,
    GL_ARB_shadow_ambient = 25,
    GL_ARB_window_pos = 26,
    GL_ARB_vertex_program = 27,
    GL_ARB_fragment_program = 28,
    GL_ARB_vertex_buffer_object = 29,
    GLX_ARB_vertex_buffer_object = 30,
    GL_ARB_occlusion_query = 31,
    GL_ARB_shader_objects = 32,
    GL_ARB_vertex_shader = 33,
    GL_ARB_fragment_shader = 34,
    GL_ARB_shading_language_100 = 35,
    GL_ARB_texture_non_power_of_two = 36,
    GL_ARB_point_sprite = 37,
    GL_ARB_fragment_program_shadow = 38,
    GL_ARB_draw_buffers = 39,
    GL_ARB_texture_rectangle = 40,
    GL_ARB_color_buffer_float = 41,
    WGL_ARB_pixel_format_float = 42,
    GLX_ARB_fbconfig_float = 43,
    GL_ARB_half_float_pixel = 44,
    GL_ARB_texture_float = 45,
    GL_ARB_pixel_buffer_object = 46,
    GL_ARB_depth_buffer_float = 47,
    GL_ARB_draw_instanced = 48,
    GL_ARB_framebuffer_object = 49,
    GL_ARB_framebuffer_sRGB = 50,
    GLX_ARB_framebuffer_sRGB = 51,
    WGL_ARB_framebuffer_sRGB = 52,
    GL_ARB_geometry_shader4 = 53,
    GL_ARB_half_float_vertex = 54,
    GL_ARB_instanced_arrays = 55,
    GL_ARB_map_buffer_range = 56,
    GL_ARB_texture_buffer_object = 57,
    GL_ARB_texture_compression_rgtc = 58,
    GL_ARB_texture_rg = 59,
    GL_ARB_vertex_array_object = 60,
    WGL_ARB_create_context = 61,
    GLX_ARB_create_context = 62,
    GL_ARB_uniform_buffer_object = 63,
    GL_ARB_compatibility = 64,
    GL_ARB_copy_buffer = 65,
    GL_ARB_shader_texture_lod = 66,
    GL_ARB_depth_clamp = 67,
    GL_ARB_draw_elements_base_vertex = 68,
    GL_ARB_fragment_coord_conventions = 69,
    GL_ARB_provoking_vertex = 70,
    GL_ARB_seamless_cube_map = 71,
    GL_ARB_sync = 72,
    GL_ARB_texture_multisample = 73,
    GL_ARB_vertex_array_bgra = 74,
    GL_ARB_draw_buffers_blend = 75,
    GL_ARB_sample_shading = 76,
    GL_ARB_texture_cube_map_array = 77,
    GL_ARB_texture_gather = 78,
    GL_ARB_texture_query_lod = 79,
    WGL_ARB_create_context_profile = 80,
    GLX_ARB_create_context_profile = 81,
    GL_ARB_shading_language_include = 82,
    GL_ARB_texture_compression_bptc = 83,
    GL_ARB_blend_func_extended = 84,
    GL_ARB_explicit_attrib_location = 85,
    GL_ARB_occlusion_query2 = 86,
    GL_ARB_sampler_objects = 87,
    GL_ARB_shader_bit_encoding = 88,
    GL_ARB_texture_rgb10_a2ui = 89,
    GL_ARB_texture_swizzle = 90,
    GL_ARB_timer_query = 91,
    GL_ARB_vertex_type_2_10_10_10_rev = 92,
    GL_ARB_draw_indirect = 93,
    GL_ARB_gpu_shader5 = 94,
    GL_ARB_gpu_shader_fp64 = 95,
    GL_ARB_shader_subroutine = 96,
    GL_ARB_tessellation_shader = 97,
    GL_ARB_texture_buffer_object_rgb32 = 98,
    GL_ARB_transform_feedback2 = 99,
    GL_ARB_transform_feedback3 = 100,
    GL_ARB_ES2_compatibility = 101,
    GL_ARB_get_program_binary = 102,
    GL_ARB_separate_shader_objects = 103,
    GL_ARB_shader_precision = 104,
    GL_ARB_vertex_attrib_64bit = 105,
    GL_ARB_viewport_array = 106,
    GLX_ARB_create_context_robustness = 107,
    WGL_ARB_create_context_robustness = 108,
    GL_ARB_cl_event = 109,
    GL_ARB_debug_output = 110,
    GL_ARB_robustness = 111,
    GL_ARB_shader_stencil_export = 112,
    GL_ARB_base_instance = 113,
    GL_ARB_shading_language_420pack = 114,
    GL_ARB_transform_feedback_instanced = 115,
    GL_ARB_compressed_texture_pixel_storage = 116,
    GL_ARB_conservative_depth = 117,
    GL_ARB_internalformat_query = 118,
    GL_ARB_map_buffer_alignment = 119,
    GL_ARB_shader_atomic_counters = 120,
    GL_ARB_shader_image_load_store = 121,
    GL_ARB_shading_language_packing = 122,
    GL_ARB_texture_storage = 123,
    GL_KHR_texture_compression_astc_hdr = 124,
    GL_KHR_texture_compression_astc_ldr = 125,
    GL_KHR_debug = 126,
    GL_ARB_arrays_of_arrays = 127,
    GL_ARB_clear_buffer_object = 128,
    GL_ARB_compute_shader = 129,
    GL_ARB_copy_image = 130,
    GL_ARB_texture_view = 131,
    GL_ARB_vertex_attrib_binding = 132,
    GL_ARB_robustness_isolation = 133,
    GL_ARB_ES3_compatibility = 134,
    GL_ARB_explicit_uniform_location = 135,
    GL_ARB_fragment_layer_viewport = 136,
    GL_ARB_framebuffer_no_attachments = 137,
    GL_ARB_internalformat_query2 = 138,
    GL_ARB_invalidate_subdata = 139,
    GL_ARB_multi_draw_indirect = 140,
    GL_ARB_program_interface_query = 141,
    GL_ARB_robust_buffer_access_behavior = 142,
    GL_ARB_shader_image_size = 143,
    GL_ARB_shader_storage_buffer_object = 144,
    GL_ARB_stencil_texturing = 145,
    GL_ARB_texture_buffer_range = 146,
    GL_ARB_texture_query_levels = 147,
    GL_ARB_texture_storage_multisample = 148,
    GLX_ARB_robustness_application_isolation = 149,
    GLX_ARB_robustness_share_group_isolation = 150,
    WGL_ARB_robustness_application_isolation = 151,
    WGL_ARB_robustness_share_group_isolation = 152,
    GL_ARB_buffer_storage = 153,
    GL_ARB_clear_texture = 154,
    GL_ARB_enhanced_layouts = 155,
    GL_ARB_multi_bind = 156,
    GL_ARB_query_buffer_object = 157,
    GL_ARB_texture_mirror_clamp_to_edge = 158,
    GL_ARB_texture_stencil8 = 159,
    GL_ARB_vertex_type_10f_11f_11f_rev = 160,
    GL_ARB_bindless_texture = 161,
    GL_ARB_compute_variable_group_size = 162,
    GL_ARB_indirect_parameters = 163,
    GL_ARB_seamless_cubemap_per_texture = 164,
    GL_ARB_shader_draw_parameters = 165,
    GL_ARB_shader_group_vote = 166,
    GL_ARB_sparse_texture = 167,
    GL_ARB_ES3_1_compatibility = 168,
    GL_ARB_clip_control = 169,
    GL_ARB_conditional_render_inverted = 170,
    GL_ARB_cull_distance = 171,
    GL_ARB_derivative_control = 172,
    GL_ARB_direct_state_access = 173,
    GL_ARB_get_texture_sub_image = 174,
    GL_ARB_shader_texture_image_samples = 175,
    GL_ARB_texture_barrier = 176,
    GL_KHR_context_flush_control = 177,
    GLX_ARB_context_flush_control = 178,
    WGL_ARB_context_flush_control = 179,
    GL_KHR_robust_buffer_access_behavior = 180,
    GL_KHR_robustness = 181,
    GL_ARB_pipeline_statistics_query = 182,
    GL_ARB_sparse_buffer = 183,
    GL_ARB_transform_feedback_overflow_query = 184,
    GL_KHR_blend_equation_advanced = 185,
    GL_KHR_blend_equation_advanced_coherent = 186,
    GL_KHR_no_error = 187,
    GL_ARB_ES3_2_compatibility = 188,
    GL_ARB_fragment_shader_interlock = 189,
    GL_ARB_gpu_shader_int64 = 190,
    GL_ARB_parallel_shader_compile = 191,
    GL_ARB_post_depth_coverage = 192,
    GL_ARB_sample_locations = 193,
    GL_ARB_shader_atomic_counter_ops = 194,
    GL_ARB_shader_ballot = 195,
    GL_ARB_shader_clock = 196,
    GL_ARB_shader_viewport_layer_array = 197,
    GL_ARB_sparse_texture2 = 198,
    GL_ARB_sparse_texture_clamp = 199,
    GL_ARB_texture_filter_minmax = 200,
    GL_KHR_texture_compression_astc_sliced_3d = 201,
    GL_ARB_gl_spirv = 202,
    GL_EXT_abgr = 203,
    GL_EXT_blend_color = 204,
    GL_EXT_polygon_offset = 205,
    GL_EXT_texture = 206,
    GL_EXT_texture3D = 207,
    GL_SGIS_texture_filter4 = 208,
    GL_EXT_subtexture = 209,
    GL_EXT_copy_texture = 210,
    GL_EXT_histogram = 211,
    GL_EXT_convolution = 212,
    GL_SGI_color_matrix = 213,
    GL_SGI_color_table = 214,
    GL_SGIS_pixel_texture = 215,
    GL_SGIX_pixel_texture = 216,
    GL_SGIS_texture4D = 217,
    GL_SGI_texture_color_table = 218,
    GL_EXT_cmyka = 219,
    GL_EXT_texture_object = 220,
    GL_SGIS_detail_texture = 221,
    GL_SGIS_sharpen_texture = 222,
    GL_EXT_packed_pixels = 223,
    GL_SGIS_texture_lod = 224,
    GL_SGIS_multisample = 225,
    GLX_SGIS_multisample = 226,
    GL_EXT_rescale_normal = 227,
    GLX_EXT_visual_info = 228,
    GL_EXT_vertex_array = 229,
    GL_EXT_misc_attribute = 230,
    GL_SGIS_generate_mipmap = 231,
    GL_SGIX_clipmap = 232,
    GL_SGIX_shadow = 233,
    GL_SGIS_texture_edge_clamp = 234,
    GL_SGIS_texture_border_clamp = 235,
    GL_EXT_blend_minmax = 236,
    GL_EXT_blend_subtract = 237,
    GL_EXT_blend_logic_op = 238,
    GLX_SGI_swap_control = 239,
    GLX_SGI_video_sync = 240,
    GLX_SGI_make_current_read = 241,
    GLX_SGIX_video_source = 242,
    GLX_EXT_visual_rating = 243,
    GL_SGIX_interlace = 244,
    GLX_EXT_import_context = 245,
    GLX_SGIX_fbconfig = 246,
    GLX_SGIX_pbuffer = 247,
    GL_SGIS_texture_select = 248,
    GL_SGIX_sprite = 249,
    GL_SGIX_texture_multi_buffer = 250,
    GL_EXT_point_parameters = 251,
    GL_SGIX_instruments = 252,
    GL_SGIX_texture_scale_bias = 253,
    GL_SGIX_framezoom = 254,
    GL_SGIX_tag_sample_buffer = 255,
    GL_SGIX_reference_plane = 256,
    GL_SGIX_flush_raster = 257,
    GLX_SGI_cushion = 258,
    GL_SGIX_depth_texture = 259,
    GL_SGIS_fog_function = 260,
    GL_SGIX_fog_offset = 261,
    GL_HP_image_transform = 262,
    GL_HP_convolution_border_modes = 263,
    GL_SGIX_texture_add_env = 264,
    GL_EXT_color_subtable = 265,
    GLU_EXT_object_space_tess = 266,
    GL_PGI_vertex_hints = 267,
    GL_PGI_misc_hints = 268,
    GL_EXT_paletted_texture = 269,
    GL_EXT_clip_volume_hint = 270,
    GL_SGIX_list_priority = 271,
    GL_SGIX_ir_instrument1 = 272,
    GLX_SGIX_video_resize = 273,
    GL_SGIX_texture_lod_bias = 274,
    GLU_SGI_filter4_parameters = 275,
    GLX_SGIX_dm_buffer = 276,
    GL_SGIX_shadow_ambient = 277,
    GLX_SGIX_swap_group = 278,
    GLX_SGIX_swap_barrier = 279,
    GL_EXT_index_texture = 280,
    GL_EXT_index_material = 281,
    GL_EXT_index_func = 282,
    GL_EXT_index_array_formats = 283,
    GL_EXT_compiled_vertex_array = 284,
    GL_EXT_cull_vertex = 285,
    GLU_EXT_nurbs_tessellator = 286,
    GL_SGIX_ycrcb = 287,
    GL_EXT_fragment_lighting = 288,
    GL_IBM_rasterpos_clip = 289,
    GL_HP_texture_lighting = 290,
    GL_EXT_draw_range_elements = 291,
    GL_WIN_phong_shading = 292,
    GL_WIN_specular_fog = 293,
    GLX_SGIS_color_range = 294,
    GL_SGIS_color_range = 295,
    GL_EXT_light_texture = 296,
    GL_SGIX_blend_alpha_minmax = 297,
    GL_EXT_scene_marker = 298,
    GLX_EXT_scene_marker = 299,
    GL_SGIX_pixel_texture_bits = 300,
    GL_EXT_bgra = 301,
    GL_SGIX_async = 302,
    GL_SGIX_async_pixel = 303,
    GL_SGIX_async_histogram = 304,
    GL_INTEL_texture_scissor = 305,
    GL_INTEL_parallel_arrays = 306,
    GL_HP_occlusion_test = 307,
    GL_EXT_pixel_transform = 308,
    GL_EXT_pixel_transform_color_table = 309,
    GL_EXT_shared_texture_palette = 310,
    GLX_SGIS_blended_overlay = 311,
    GL_EXT_separate_specular_color = 312,
    GL_EXT_secondary_color = 313,
    GL_EXT_texture_env = 314,
    GL_EXT_texture_perturb_normal = 315,
    GL_EXT_multi_draw_arrays = 316,
    GL_SUN_multi_draw_arrays = 317,
    GL_EXT_fog_coord = 318,
    GL_REND_screen_coordinates = 319,
    GL_EXT_coordinate_frame = 320,
    GL_EXT_texture_env_combine = 321,
    GL_APPLE_specular_vector = 322,
    GL_APPLE_transform_hint = 323,
    GL_SUNX_constant_data = 324,
    GL_SUN_global_alpha = 325,
    GL_SUN_triangle_list = 326,
    GL_SUN_vertex = 327,
    WGL_EXT_display_color_table = 328,
    WGL_EXT_extensions_string = 329,
    WGL_EXT_make_current_read = 330,
    WGL_EXT_pixel_format = 331,
    WGL_EXT_pbuffer = 332,
    WGL_EXT_swap_control = 333,
    GL_EXT_blend_func_separate = 334,
    GL_INGR_color_clamp = 335,
    GL_INGR_interlace_read = 336,
    GL_EXT_stencil_wrap = 337,
    WGL_EXT_depth_float = 338,
    GL_EXT_422_pixels = 339,
    GL_NV_texgen_reflection = 340,
    GL_SGIX_texture_range = 341,
    GL_SUN_convolution_border_modes = 342,
    GLX_SUN_get_transparent_index = 343,
    GL_EXT_texture_env_add = 344,
    GL_EXT_texture_lod_bias = 345,
    GL_EXT_texture_filter_anisotropic = 346,
    GL_EXT_vertex_weighting = 347,
    GL_NV_light_max_exponent = 348,
    GL_NV_vertex_array_range = 349,
    GL_NV_register_combiners = 350,
    GL_NV_fog_distance = 351,
    GL_NV_texgen_emboss = 352,
    GL_NV_blend_square = 353,
    GL_NV_texture_env_combine4 = 354,
    GL_MESA_resize_buffers = 355,
    GL_MESA_window_pos = 356,
    GL_EXT_texture_compression_s3tc = 357,
    GL_IBM_cull_vertex = 358,
    GL_IBM_multimode_draw_arrays = 359,
    GL_IBM_vertex_array_lists = 360,
    GL_3DFX_texture_compression_FXT1 = 361,
    GL_3DFX_multisample = 362,
    GL_3DFX_tbuffer = 363,
    WGL_EXT_multisample = 364,
    GL_EXT_multisample = 365,
    GL_SGIX_vertex_preclip = 366,
    GL_SGIX_vertex_preclip_hint = 367,
    GL_SGIX_convolution_accuracy = 368,
    GL_SGIX_resample = 369,
    GL_SGIS_point_line_texgen = 370,
    GL_SGIS_texture_color_mask = 371,
    GLX_MESA_copy_sub_buffer = 372,
    GLX_MESA_pixmap_colormap = 373,
    GLX_MESA_release_buffers = 374,
    GLX_MESA_set_3dfx_mode = 375,
    GL_EXT_texture_env_dot3 = 376,
    GL_ATI_texture_mirror_once = 377,
    GL_NV_fence = 378,
    GL_IBM_static_data = 379,
    GL_IBM_texture_mirrored_repeat = 380,
    GL_NV_evaluators = 381,
    GL_NV_packed_depth_stencil = 382,
    GL_NV_register_combiners2 = 383,
    GL_NV_texture_compression_vtc = 384,
    GL_NV_texture_rectangle = 385,
    GL_NV_texture_shader = 386,
    GL_NV_texture_shader2 = 387,
    GL_NV_vertex_array_range2 = 388,
    GL_NV_vertex_program = 389,
    GLX_SGIX_visual_select_group = 390,
    GL_SGIX_texture_coordinate_clamp = 391,
    GLX_OML_swap_method = 392,
    GLX_OML_sync_control = 393,
    GL_OML_interlace = 394,
    GL_OML_subsample = 395,
    GL_OML_resample = 396,
    WGL_OML_sync_control = 397,
    GL_NV_copy_depth_to_color = 398,
    GL_ATI_envmap_bumpmap = 399,
    GL_ATI_fragment_shader = 400,
    GL_ATI_pn_triangles = 401,
    GL_ATI_vertex_array_object = 402,
    GL_EXT_vertex_shader = 403,
    GL_ATI_vertex_streams = 404,
    WGL_I3D_digital_video_control = 405,
    WGL_I3D_gamma = 406,
    WGL_I3D_genlock = 407,
    WGL_I3D_image_buffer = 408,
    WGL_I3D_swap_frame_lock = 409,
    WGL_I3D_swap_frame_usage = 410,
    GL_ATI_element_array = 411,
    GL_SUN_mesh_array = 412,
    GL_SUN_slice_accum = 413,
    GL_NV_multisample_filter_hint = 414,
    GL_NV_depth_clamp = 415,
    GL_NV_occlusion_query = 416,
    GL_NV_point_sprite = 417,
    WGL_NV_render_depth_texture = 418,
    WGL_NV_render_texture_rectangle = 419,
    GL_NV_texture_shader3 = 420,
    GL_NV_vertex_program1_1 = 421,
    GL_EXT_shadow_funcs = 422,
    GL_EXT_stencil_two_side = 423,
    GL_ATI_text_fragment_shader = 424,
    GL_APPLE_client_storage = 425,
    GL_APPLE_element_array = 426,
    GL_APPLE_fence = 427,
    GL_APPLE_vertex_array_object = 428,
    GL_APPLE_vertex_array_range = 429,
    GL_APPLE_ycbcr_422 = 430,
    GL_S3_s3tc = 431,
    GL_ATI_draw_buffers = 432,
    WGL_ATI_pixel_format_float = 433,
    GL_ATI_texture_env_combine3 = 434,
    GL_ATI_texture_float = 435,
    GL_NV_float_buffer = 436,
    WGL_NV_float_buffer = 437,
    GL_NV_fragment_program = 438,
    GL_NV_half_float = 439,
    GL_NV_pixel_data_range = 440,
    GL_NV_primitive_restart = 441,
    GL_NV_texture_expand_normal = 442,
    GL_NV_vertex_program2 = 443,
    GL_ATI_map_object_buffer = 444,
    GL_ATI_separate_stencil = 445,
    GL_ATI_vertex_attrib_array_object = 446,
    GL_OES_byte_coordinates = 447,
    GL_OES_fixed_point = 448,
    GL_OES_single_precision = 449,
    GL_OES_compressed_paletted_texture = 450,
    GL_OES_read_format = 451,
    GL_OES_query_matrix = 452,
    GL_EXT_depth_bounds_test = 453,
    GL_EXT_texture_mirror_clamp = 454,
    GL_EXT_blend_equation_separate = 455,
    GL_MESA_pack_invert = 456,
    GL_MESA_ycbcr_texture = 457,
    GL_EXT_pixel_buffer_object = 458,
    GL_NV_fragment_program_option = 459,
    GL_NV_fragment_program2 = 460,
    GL_NV_vertex_program2_option = 461,
    GL_NV_vertex_program3 = 462,
    GLX_SGIX_hyperpipe = 463,
    GLX_MESA_agp_offset = 464,
    GL_EXT_texture_compression_dxt1 = 465,
    GL_EXT_framebuffer_object = 466,
    GL_GREMEDY_string_marker = 467,
    GL_EXT_packed_depth_stencil = 468,
    WGL_3DL_stereo_control = 469,
    GL_EXT_stencil_clear_tag = 470,
    GL_EXT_texture_sRGB = 471,
    GL_EXT_framebuffer_blit = 472,
    GL_EXT_framebuffer_multisample = 473,
    GL_MESAX_texture_stack = 474,
    GL_EXT_timer_query = 475,
    GL_EXT_gpu_program_parameters = 476,
    GL_APPLE_flush_buffer_range = 477,
    GL_NV_gpu_program4 = 478,
    GL_NV_geometry_program4 = 479,
    GL_EXT_geometry_shader4 = 480,
    GL_NV_vertex_program4 = 481,
    GL_EXT_gpu_shader4 = 482,
    GL_EXT_draw_instanced = 483,
    GL_EXT_packed_float = 484,
    WGL_EXT_pixel_format_packed_float = 485,
    GLX_EXT_fbconfig_packed_float = 486,
    GL_EXT_texture_array = 487,
    GL_EXT_texture_buffer_object = 488,
    GL_EXT_texture_compression_latc = 489,
    GL_EXT_texture_compression_rgtc = 490,
    GL_EXT_texture_shared_exponent = 491,
    GL_NV_depth_buffer_float = 492,
    GL_NV_fragment_program4 = 493,
    GL_NV_framebuffer_multisample_coverage = 494,
    GL_EXT_framebuffer_sRGB = 495,
    GLX_EXT_framebuffer_sRGB = 496,
    WGL_EXT_framebuffer_sRGB = 497,
    GL_NV_geometry_shader4 = 498,
    GL_NV_parameter_buffer_object = 499,
    GL_EXT_draw_buffers2 = 500,
    GL_NV_transform_feedback = 501,
    GL_EXT_bindable_uniform = 502,
    GL_EXT_texture_integer = 503,
    GLX_EXT_texture_from_pixmap = 504,
    GL_GREMEDY_frame_terminator = 505,
    GL_NV_conditional_render = 506,
    GL_NV_present_video = 507,
    GLX_NV_present_video = 508,
    WGL_NV_present_video = 509,
    GLX_NV_video_out = 510,
    WGL_NV_video_output = 511,
    GLX_NV_swap_group = 512,
    WGL_NV_swap_group = 513,
    GL_EXT_transform_feedback = 514,
    GL_EXT_direct_state_access = 515,
    GL_EXT_vertex_array_bgra = 516,
    WGL_NV_gpu_affinity = 517,
    GL_EXT_texture_swizzle = 518,
    GL_NV_explicit_multisample = 519,
    GL_NV_transform_feedback2 = 520,
    GL_ATI_meminfo = 521,
    GL_AMD_performance_monitor = 522,
    WGL_AMD_gpu_association = 523,
    GL_AMD_texture_texture4 = 524,
    GL_AMD_vertex_shader_tessellator = 525,
    GL_EXT_provoking_vertex = 526,
    GL_EXT_texture_snorm = 527,
    GL_AMD_draw_buffers_blend = 528,
    GL_APPLE_texture_range = 529,
    GL_APPLE_float_pixels = 530,
    GL_APPLE_vertex_program_evaluators = 531,
    GL_APPLE_aux_depth_stencil = 532,
    GL_APPLE_object_purgeable = 533,
    GL_APPLE_row_bytes = 534,
    GL_APPLE_rgb_422 = 535,
    GL_NV_video_capture = 536,
    GLX_NV_video_capture = 537,
    WGL_NV_video_capture = 538,
    GL_EXT_swap_control = 539,
    GL_NV_copy_image = 540,
    WGL_NV_copy_image = 541,
    GLX_NV_copy_image = 542,
    GL_EXT_separate_shader_objects = 543,
    GL_NV_parameter_buffer_object2 = 544,
    GL_NV_shader_buffer_load = 545,
    GL_NV_vertex_buffer_unified_memory = 546,
    GL_NV_texture_barrier = 547,
    GL_AMD_shader_stencil_export = 548,
    GL_AMD_seamless_cubemap_per_texture = 549,
    GLX_INTEL_swap_event = 550,
    GL_AMD_conservative_depth = 551,
    GL_EXT_shader_image_load_store = 552,
    GL_EXT_vertex_attrib_64bit = 553,
    GL_NV_gpu_program5 = 554,
    GL_NV_gpu_shader5 = 555,
    GL_NV_shader_buffer_store = 556,
    GL_NV_tessellation_program5 = 557,
    GL_NV_vertex_attrib_integer_64bit = 558,
    GL_NV_multisample_coverage = 559,
    GL_AMD_name_gen_delete = 560,
    GL_AMD_debug_output = 561,
    GL_NV_vdpau_interop = 562,
    GL_AMD_transform_feedback3_lines_triangles = 563,
    GLX_AMD_gpu_association = 564,
    GLX_EXT_create_context_es2_profile = 565,
    GLX_EXT_create_context_es_profile = 566,
    WGL_EXT_create_context_es2_profile = 567,
    WGL_EXT_create_context_es_profile = 568,
    GL_AMD_depth_clamp_separate = 569,
    GL_EXT_texture_sRGB_decode = 570,
    GL_NV_texture_multisample = 571,
    GL_AMD_blend_minmax_factor = 572,
    GL_AMD_sample_positions = 573,
    GL_EXT_x11_sync_object = 574,
    WGL_NV_DX_interop = 575,
    GL_AMD_multi_draw_indirect = 576,
    GL_EXT_framebuffer_multisample_blit_scaled = 577,
    GL_NV_path_rendering = 578,
    GL_AMD_pinned_memory = 579,
    WGL_NV_DX_interop2 = 580,
    GL_AMD_stencil_operation_extended = 581,
    GLX_EXT_swap_control_tear = 582,
    WGL_EXT_swap_control_tear = 583,
    GL_AMD_vertex_shader_viewport_index = 584,
    GL_AMD_vertex_shader_layer = 585,
    GL_NV_bindless_texture = 586,
    GL_NV_shader_atomic_float = 587,
    GL_AMD_query_buffer_object = 588,
    GL_NV_compute_program5 = 589,
    GL_NV_shader_storage_buffer_object = 590,
    GL_NV_shader_atomic_counters = 591,
    GL_NV_deep_texture3D = 592,
    GL_NVX_conditional_render = 593,
    GL_AMD_sparse_texture = 594,
    GLX_EXT_buffer_age = 595,
    GL_AMD_shader_trinary_minmax = 596,
    GL_INTEL_map_texture = 597,
    GL_NV_draw_texture = 598,
    GL_AMD_interleaved_elements = 599,
    GL_NV_bindless_multi_draw_indirect = 600,
    GL_NV_blend_equation_advanced = 601,
    GL_NV_blend_equation_advanced_coherent = 602,
    GL_NV_gpu_program5_mem_extended = 603,
    GL_AMD_shader_atomic_counter_ops = 604,
    WGL_NV_delay_before_swap = 605,
    GL_EXT_shader_integer_mix = 606,
    GL_NVX_gpu_memory_info = 607,
    GL_EXT_debug_label = 608,
    GL_EXT_debug_marker = 609,
    GL_INTEL_fragment_shader_ordering = 610,
    GL_AMD_occlusion_query_event = 611,
    GL_INTEL_performance_query = 612,
    GL_AMD_shader_stencil_value_export = 613,
    GLX_NV_delay_before_swap = 614,
    GLX_MESA_query_renderer = 615,
    GL_NV_shader_thread_group = 616,
    GL_NV_shader_thread_shuffle = 617,
    GL_EXT_shader_image_load_formatted = 618,
    GL_AMD_transform_feedback4 = 619,
    GL_AMD_gpu_shader_int64 = 620,
    GL_EXT_glx_stereo_tree = 621,
    GL_AMD_gcn_shader = 622,
    GL_NV_shader_atomic_int64 = 623,
    GL_NV_bindless_multi_draw_indirect_count = 624,
    GLX_NV_copy_buffer = 625,
    GL_NV_uniform_buffer_unified_memory = 626,
    GL_EXT_polygon_offset_clamp = 627,
    GL_EXT_post_depth_coverage = 628,
    GL_EXT_raster_multisample = 629,
    GL_EXT_sparse_texture2 = 630,
    GL_EXT_texture_filter_minmax = 631,
    GL_NV_conservative_raster = 632,
    GL_NV_fill_rectangle = 633,
    GL_NV_fragment_coverage_to_color = 634,
    GL_NV_fragment_shader_interlock = 635,
    GL_NV_framebuffer_mixed_samples = 636,
    GL_NV_geometry_shader_passthrough = 637,
    GL_NV_path_rendering_shared_edge = 638,
    GL_NV_sample_locations = 639,
    GL_NV_sample_mask_override_coverage = 640,
    GL_NV_shader_atomic_fp16_vector = 641,
    GL_NV_internalformat_sample_query = 642,
    GL_NV_viewport_array2 = 643,
    GL_NV_command_list = 644,
    GL_OVR_multiview = 645,
    GL_OVR_multiview2 = 646,
    GL_NV_conservative_raster_dilate = 647,
    GL_INTEL_framebuffer_CMAA = 648,
    GLX_EXT_libglvnd = 649,
    GL_NV_viewport_swizzle = 650,
    GL_NV_robustness_video_memory_purge = 651,
    GL_AMD_shader_explicit_vertex_parameter = 652,
    GL_NV_clip_space_w_scaling = 653,
    GL_NV_conservative_raster_pre_snap_triangles = 654,
    GL_NV_shader_atomic_float64 = 655,
    GL_NV_stereo_view_rendering = 656,
    GL_EXT_window_rectangles = 657,
    GL_INTEL_conservative_rasterization = 658,
    GL_NVX_blend_equation_advanced_multi_draw_buffers = 659,
    GL_NVX_linked_gpu_multicast = 660,
    GL_NV_gpu_multicast = 661,
    GL_MESA_shader_integer_functions = 662,
    GL_AMD_gpu_shader_half_float = 663,
    GL_AMD_shader_ballot = 664
}

internal enum FramebufferAttachment
{
    DepthStencilAttachment = 0x821A,
    ColorAttachment0 = 0x8CE0,
    ColorAttachment0Ext = 0x8CE0,
    ColorAttachment1 = 0x8CE1,
    ColorAttachment1Ext = 0x8CE1,
    ColorAttachment2 = 0x8CE2,
    ColorAttachment2Ext = 0x8CE2,
    ColorAttachment3 = 0x8CE3,
    ColorAttachment3Ext = 0x8CE3,
    ColorAttachment4 = 0x8CE4,
    ColorAttachment4Ext = 0x8CE4,
    ColorAttachment5 = 0x8CE5,
    ColorAttachment5Ext = 0x8CE5,
    ColorAttachment6 = 0x8CE6,
    ColorAttachment6Ext = 0x8CE6,
    ColorAttachment7 = 0x8CE7,
    ColorAttachment7Ext = 0x8CE7,
    ColorAttachment8 = 0x8CE8,
    ColorAttachment8Ext = 0x8CE8,
    ColorAttachment9 = 0x8CE9,
    ColorAttachment9Ext = 0x8CE9,
    ColorAttachment10 = 0x8CEA,
    ColorAttachment10Ext = 0x8CEA,
    ColorAttachment11 = 0x8CEB,
    ColorAttachment11Ext = 0x8CEB,
    ColorAttachment12 = 0x8CEC,
    ColorAttachment12Ext = 0x8CEC,
    ColorAttachment13 = 0x8CED,
    ColorAttachment13Ext = 0x8CED,
    ColorAttachment14 = 0x8CEE,
    ColorAttachment14Ext = 0x8CEE,
    ColorAttachment15 = 0x8CEF,
    ColorAttachment15Ext = 0x8CEF,
    DepthAttachment = 0x8D00,
    DepthAttachmentExt = 0x8D00,
    StencilAttachment = 0x8D20,
    StencilAttachmentExt = 0x8D20
}

internal enum FramebufferErrorCode
{
    FramebufferUndefined = 0x8219,
    FramebufferComplete = 0x8CD5,
    FramebufferCompleteExt = 0x8CD5,
    FramebufferIncompleteAttachment = 0x8CD6,
    FramebufferIncompleteAttachmentExt = 0x8CD6,
    FramebufferIncompleteMissingAttachment = 0x8CD7,
    FramebufferIncompleteMissingAttachmentExt = 0x8CD7,
    FramebufferIncompleteDimensionsExt = 0x8CD9,
    FramebufferIncompleteFormatsExt = 0x8CDA,
    FramebufferIncompleteDrawBuffer = 0x8CDB,
    FramebufferIncompleteDrawBufferExt = 0x8CDB,
    FramebufferIncompleteReadBuffer = 0x8CDC,
    FramebufferIncompleteReadBufferExt = 0x8CDC,
    FramebufferUnsupported = 0x8CDD,
    FramebufferUnsupportedExt = 0x8CDD,
    FramebufferIncompleteMultisample = 0x8D56,
    FramebufferIncompleteLayerTargets = 0x8DA8,
    FramebufferIncompleteLayerCount = 0x8DA9
}

internal enum FramebufferPName
{
    FramebufferDefaultWidth = 0x9310,
    FramebufferDefaultHeight = 0x9311,
    FramebufferDefaultLayers = 0x9312,
    FramebufferDefaultSamples = 0x9313,
    FramebufferDefaultFixedSampleLocations = 0x9314
}

internal enum FramebufferParameterName
{
    FramebufferAttachmentColorEncoding = 0x8210,
    FramebufferAttachmentComponentType = 0x8211,
    FramebufferAttachmentRedSize = 0x8212,
    FramebufferAttachmentGreenSize = 0x8213,
    FramebufferAttachmentBlueSize = 0x8214,
    FramebufferAttachmentAlphaSize = 0x8215,
    FramebufferAttachmentDepthSize = 0x8216,
    FramebufferAttachmentStencilSize = 0x8217,
    FramebufferAttachmentObjectType = 0x8CD0,
    FramebufferAttachmentObjectTypeExt = 0x8CD0,
    FramebufferAttachmentObjectName = 0x8CD1,
    FramebufferAttachmentObjectNameExt = 0x8CD1,
    FramebufferAttachmentTextureLevel = 0x8CD2,
    FramebufferAttachmentTextureLevelExt = 0x8CD2,
    FramebufferAttachmentTextureCubeMapFace = 0x8CD3,
    FramebufferAttachmentTextureCubeMapFaceExt = 0x8CD3,
    FramebufferAttachmentTexture3DZoffsetExt = 0x8CD4,
    FramebufferAttachmentTextureLayer = 0x8CD4,
    FramebufferAttachmentLayered = 0x8DA7
}

internal enum FramebufferTarget
{
    ReadFramebuffer = 0x8CA8,
    DrawFramebuffer = 0x8CA9,
    Framebuffer = 0x8D40,
    FramebufferExt = 0x8D40
}

internal enum FrontFaceDirection
{
    Cw = 0x0900,
    Ccw = 0x0901
}

internal enum GenerateMipmapTarget
{
    Texture1D = 0x0DE0,
    Texture2D = 0x0DE1,
    Texture3D = 0x806F,
    TextureCubeMap = 0x8513,
    Texture1DArray = 0x8C18,
    Texture2DArray = 0x8C1A,
    Texture2DMultisample = 0x9100,
    Texture2DMultisampleArray = 0x9102
}

internal enum GetMultisamplePName
{
    SamplePosition = 0x8E50
}

internal enum GetPName
{
    ActiveTexture = 0x84E0,
    AliasedLineWidthRange = 0x846E,
    ArrayBufferBinding = 0x8894,
    Blend = 0x0BE2,
    BlendColor = 0x8005,

    [Obsolete("Use BlendColor instead.")]
    BlendColorExt = 0x8005,
    BlendDstAlpha = 0x80CA,
    BlendDstRgb = 0x80C8,
    BlendEquationAlpha = 0x883D,
    BlendEquationRgb = 0x8009,
    BlendSrcAlpha = 0x80CB,
    BlendSrcRgb = 0x80C9,
    ColorClearValue = 0x0C22,
    ColorLogicOp = 0x0BF2,
    ColorWritemask = 0x0C23,
    CompressedTextureFormats = 0x86A3,
    MaxComputeShaderStorageBlocks = 0x90DB,
    MaxCombinedShaderStorageBlocks = 0x90DC,
    MaxComputeUniformBlocks = 0x91BB,
    MaxComputeTextureImageUnits = 0x91BC,
    MaxComputeUniformComponents = 0x8263,
    MaxComputeAtomicCounters = 0x8265,
    MaxComputeAtomicCounterBuffers = 0x8264,
    MaxCombinedComputeUniformComponents = 0x8266,
    MaxComputeWorkGroupInvocations = 0x90EB,
    MaxComputeWorkGroupCount = 0x91BE,
    MaxComputeWorkGroupSize = 0x91BF,
    DispatchIndirectBufferBinding = 0x90EF,
    MaxDebugGroupStackDepth = 0x826C,
    DebugGroupStackDepth = 0x826D,
    ContextFlags = 0x821E,
    CullFace = 0x0B44,
    CurrentProgram = 0x8B8D,
    DepthClearValue = 0x0B73,
    DepthFunc = 0x0B74,
    DepthRange = 0x0B70,
    DepthScale = 0x0D1E,
    DepthTest = 0x0B71,
    DepthWritemask = 0x0B72,
    Dither = 0x0BD0,
    Doublebuffer = 0x0C32,
    DrawBuffer = 0x0C01,
    DrawBuffer0 = 0x8825,
    DrawBuffer1 = 0x8826,
    DrawBuffer10 = 0x882F,
    DrawBuffer11 = 0x8830,
    DrawBuffer12 = 0x8831,
    DrawBuffer13 = 0x8832,
    DrawBuffer14 = 0x8833,
    DrawBuffer15 = 0x8834,
    DrawBuffer2 = 0x8827,
    DrawBuffer3 = 0x8828,
    DrawBuffer4 = 0x8829,
    DrawBuffer5 = 0x882A,
    DrawBuffer6 = 0x882B,
    DrawBuffer7 = 0x882C,
    DrawBuffer8 = 0x882D,
    DrawBuffer9 = 0x882E,
    DrawFramebufferBinding = 0x8CA6,
    ReadFramebufferBinding = 0x8CAA,
    ElementArrayBufferBinding = 0x8895,
    FragmentShaderDerivativeHint = 0x8B8B,
    ImplementationColorReadFormat = 0x8B9B,
    ImplementationColorReadType = 0x8B9A,
    LineSmooth = 0x0B20,
    LineSmoothHint = 0x0C52,
    LineWidth = 0x0B21,
    LayerProvokingVertex = 0x825E,
    LogicOpMode = 0x0BF0,
    MajorVersion = 0x821B,
    Max3DTextureSize = 0x8073,
    MaxArrayTextureLayers = 0x88FF,
    MaxClipDistances = 0x0D32,
    MaxColorTextureSamples = 0x910E,
    MaxCombinedAtomicCounters = 0x92D7,
    MaxCombinedFragmentUniformComponents = 0x8A33,
    MaxCombinedGeometryUniformComponents = 0x8A32,
    MaxCombinedTextureImageUnits = 0x8B4D,
    MaxCombinedUniformBlocks = 0x8A2E,
    MaxCombinedVertexUniformComponents = 0x8A31,
    MaxCubeMapTextureSize = 0x851C,
    MaxDepthTextureSamples = 0x910F,
    MaxDrawBuffers = 0x8824,
    MaxElementsIndices = 0x80E9,
    MaxElementsVertices = 0x80E8,
    MaxFragmentAtomicCounters = 0x92D6,
    MaxFragmentShaderStorageBlocks = 0x90DA,
    MaxFragmentInputComponents = 0x9125,
    MaxFragmentUniformComponents = 0x8B49,
    MaxFragmentUniformVectors = 0x8DFD,
    MaxFragmentUniformBlocks = 0x8A2D,
    MaxFramebufferWidth = 0x9315,
    MaxFramebufferHeight = 0x9316,
    MaxFramebufferLayers = 0x9317,
    MaxFramebufferSamples = 0x9318,
    MaxGeometryAtomicCounters = 0x92D5,
    MaxGeometryShaderStorageBlocks = 0x90D7,
    MaxGeometryInputComponents = 0x9123,
    MaxGeometryOutputComponents = 0x9124,
    MaxGeometryTextureImageUnits = 0x8C29,
    MaxGeometryUniformBlocks = 0x8A2C,
    MaxGeometryUniformComponents = 0x8DDF,
    MaxIntegerSamples = 0x9110,
    MinMapBufferAlignment = 0x90BC,
    MaxLabelLength = 0x82E8,
    MaxProgramTexelOffset = 0x8905,
    MinProgramTexelOffset = 0x8904,
    MaxRectangleTextureSize = 0x84F8,
    MaxRenderbufferSize = 0x84E8,
    MaxSampleMaskWords = 0x8E59,
    MaxServerWaitTimeout = 0x9111,
    MaxShaderStorageBufferBindings,
    MaxTessControlAtomicCounters,
    MaxTessEvaluationAtomicCounters,
    MaxTessControlShaderStorageBlocks,
    MaxTessEvaluationShaderStorageBlocks,
    MaxTextureBufferSize = 0x8C2B,
    MaxTextureImageUnits = 0x8872,
    MaxTextureLodBias = 0x84FD,
    MaxTextureSize = 0x0D33,
    MaxUniformBlockSize = 0x8A30,
    MaxUniformBufferBindings = 0x8A2F,
    MaxUniformLocations = 0x826E,
    MaxVaryingComponents = 0x8B4B,
    MaxVaryingVectors = 0x8DFC,
    MaxVaryingFloats = 0x8B4B,
    MaxVertexAtomicCounters = 0x92D2,
    MaxVertexAttribs = 0x8869,
    MaxVertexShaderStorageBlocks = 0x90D6,
    MaxVertexTextureImageUnits = 0x8B4C,
    MaxVertexUniformComponents = 0x8B4A,
    MaxVertexUniformVectors = 0x8DFB,
    MaxVertexOutputComponents = 0x9122,
    MaxVertexUniformBlocks = 0x8A2B,
    MaxViewportDims = 0x0D3A,
    MaxViewports = 0x825B,
    MinorVersion = 0x821C,
    NumCompressedTextureFormats = 0x86A2,
    NumExtensions = 0x821D,
    NumProgramBinaryFormats = 0x87FE,
    NumShaderBinaryFormats = 0x8DF9,
    PackAlignment = 0x0D05,
    PackImageHeight = 0x806C,

    [Obsolete("Use PackImageHeight instead.")]
    PackImageHeightExt = 0x806C,
    PackLsbFirst = 0x0D01,
    PackRowLength = 0x0D02,
    PackSkipImages = 0x806B,

    [Obsolete("Use PackSkipImages instead.")]
    PackSkipImagesExt = 0x806B,
    PackSkipPixels = 0x0D04,
    PackSkipRows = 0x0D03,
    PackSwapBytes = 0x0D00,
    PixelPackBufferBinding = 0x88ED,
    PixelUnpackBufferBinding = 0x88EF,
    PointFadeThresholdSize = 0x8128,
    PrimitiveRestartIndex = 0x8F9E,
    ProgramBinaryFormats = 0x87FF,
    ProgramPipelineBinding = 0x825A,
    ProgramPointSize = 0x8642,
    ProvokingVertex = 0x8E4F,
    PointSize = 0x0B11,
    PointSizeGranularity = 0x0B13,
    PointSizeRange = 0x0B12,
    PolygonOffsetFactor = 0x8038,
    PolygonOffsetFill = 0x8037,
    PolygonOffsetLine = 0x2A02,
    PolygonOffsetPoint = 0x2A01,
    PolygonOffsetUnits = 0x2A00,
    PolygonSmooth = 0x0B41,
    PolygonSmoothHint = 0x0C53,
    ReadBuffer = 0x0C02,
    RenderbufferBinding = 0x8CA7,
    SampleBuffers = 0x80A8,
    SampleCoverageInvert = 0x80AB,
    SampleCoverageValue = 0x80AA,
    SamplerBinding = 0x8919,
    Samples = 0x80A9,
    ScissorBox = 0x0C10,
    ScissorTest = 0x0C11,
    ShaderCompiler = 0x8DFA,
    ShaderStorageBufferBinding = 0x90D3,
    ShaderStorageBufferOffsetAlignment = 0x90DF,
    ShaderStorageBufferStart = 0x90D4,
    ShaderStorageBufferSize = 0x90D5,
    SmoothLineWidthGranularity = 0x0B23,
    SmoothLineWidthRange = 0x0B22,
    SmoothPointSizeGranularity = 0x0B13,
    SmoothPointSizeRange = 0x0B12,
    StencilBackFail = 0x8801,
    StencilBackPassDepthFail = 0x8802,
    StencilBackPassDepthPass = 0x8803,
    StencilBackRef = 0x8CA3,
    StencilBackValueMask = 0x8CA4,
    StencilBackWritemask = 0x8CA5,
    StencilClearValue = 0x0B91,
    StencilFail = 0x0B94,
    StencilFunc = 0x0B92,
    StencilPassDepthFail = 0x0B95,
    StencilPassDepthPass = 0x0B96,
    StencilRef = 0x0B97,
    StencilTest = 0x0B90,
    StencilValueMask = 0x0B93,
    StencilWritemask = 0x0B98,
    Stereo = 0x0C33,
    SubpixelBits = 0x0D50,
    TextureBinding1D = 0x8068,
    TextureBinding1DArray = 0x8C1C,
    TextureBinding2D = 0x8069,
    TextureBinding2DArray = 0x8C1D,
    TextureBinding2DMultisample = 0x9104,
    TextureBinding2DMultisampleArray = 0x9105,
    TextureBinding3D = 0x806A,
    TextureBindingBuffer = 0x8C2C,
    TextureBindingCubeMap = 0x8514,
    TextureBindingRectangle = 0x84F6,
    TextureCompressionHint = 0x84EF,
    TextureBufferOffsetAlignment = 0x919F,
    Timestamp = 0x8E28,
    TransformFeedbackBufferBinding = 0x8C8F,
    TransformFeedbackBufferStart = 0x8C84,
    TransformFeedbackBufferSize = 0x8C85,
    UniformBufferBinding = 0x8A28,
    UniformBufferOffsetAlignment = 0x8A34,
    UniformBufferStart = 0x8A29,
    UniformBufferSize = 0x8A2A,
    UnpackAlignment = 0x0CF5,
    UnpackImageHeight = 0x806E,

    [Obsolete("Use UnpackImageHeight instead.")]
    UnpackImageHeightExt = 0x806E,
    UnpackLsbFirst = 0x0CF1,
    UnpackRowLength = 0x0CF2,
    UnpackSkipImages = 0x806D,

    [Obsolete("Use UnpackSkipImages instead.")]
    UnpackSkipImagesExt = 0x806D,
    UnpackSkipPixels = 0x0CF4,
    UnpackSkipRows = 0x0CF3,
    UnpackSwapBytes = 0x0CF0,
    VertexArrayBinding = 0x85B5,
    VertexBindingDivisor = 0x82D6,
    VertexBindingOffset = 0x82D7,
    VertexBindingStride = 0x82D8,
    MaxVertexAttribRelativeOffset = 0x82D9,
    MaxVertexAttribBindings = 0x82DA,
    Viewport = 0x0BA2,
    ViewportBoundsRange = 0x825D,
    ViewportIndexProvokingVertex = 0x825F,
    ViewportSubpixelBits = 0x825C,
    MaxElementIndex = 0x8D6B,
    MaxTextureMaxAnisotropyExt = 0x84FF
}

internal enum GetPointerParameter
{
    DebugCallbackFunction = 0x8244,
    DebugCallbackUserParam = 0x8245
}

internal enum GetQueryObjectParam
{
    QueryResult = 0x8866,
    QueryResultAvailable = 0x8867
}

internal enum GetQueryParam
{
    QueryCounterBits = 0x8864,
    CurrentQuery = 0x8865
}

internal enum GetTextureParameter
{
    TextureWidth = 0x1000,
    TextureHeight = 0x1001,
    TextureComponents = 0x1003,
    TextureInternalFormat = 0x1003,
    TextureBorderColor = 0x1004,
    TextureBorder = 0x1005,
    TextureMagFilter = 0x2800,
    TextureMinFilter = 0x2801,
    TextureWrapS = 0x2802,
    TextureWrapT = 0x2803,
    TextureRedSize = 0x805C,
    TextureGreenSize = 0x805D,
    TextureBlueSize = 0x805E,
    TextureAlphaSize = 0x805F,
    TextureLuminanceSize = 0x8060,
    TextureIntensitySize = 0x8061,
    TexturePriority = 0x8066,
    TextureResident = 0x8067,
    TextureDepth = 0x8071,
    TextureDepthExt = 0x8071,
    TextureWrapR = 0x8072,
    TextureWrapRExt = 0x8072,
    DetailTextureLevelSgis = 0x809A,
    DetailTextureModeSgis = 0x809B,
    DetailTextureFuncPointsSgis = 0x809C,
    SharpenTextureFuncPointsSgis = 0x80B0,
    ShadowAmbientSgix = 0x80BF,
    DualTextureSelectSgis = 0x8124,
    QuadTextureSelectSgis = 0x8125,
    Texture4DsizeSgis = 0x8136,
    TextureWrapQSgis = 0x8137,
    TextureMinLod = 0x813A,
    TextureMinLodSgis = 0x813A,
    TextureMaxLod = 0x813B,
    TextureMaxLodSgis = 0x813B,
    TextureBaseLevel = 0x813C,
    TextureBaseLevelSgis = 0x813C,
    TextureMaxLevel = 0x813D,
    TextureMaxLevelSgis = 0x813D,
    TextureFilter4SizeSgis = 0x8147,
    TextureClipmapCenterSgix = 0x8171,
    TextureClipmapFrameSgix = 0x8172,
    TextureClipmapOffsetSgix = 0x8173,
    TextureClipmapVirtualDepthSgix = 0x8174,
    TextureClipmapLodOffsetSgix = 0x8175,
    TextureClipmapDepthSgix = 0x8176,
    PostTextureFilterBiasSgix = 0x8179,
    PostTextureFilterScaleSgix = 0x817A,
    TextureLodBiasSSgix = 0x818E,
    TextureLodBiasTSgix = 0x818F,
    TextureLodBiasRSgix = 0x8190,
    GenerateMipmap = 0x8191,
    GenerateMipmapSgis = 0x8191,
    TextureCompareSgix = 0x819A,
    TextureCompareOperatorSgix = 0x819B,
    TextureLequalRSgix = 0x819C,
    TextureGequalRSgix = 0x819D,
    TextureMaxClampSSgix = 0x8369,
    TextureMaxClampTSgix = 0x836A,
    TextureMaxClampRSgix = 0x836B,
    TextureCompressedImageSize = 0x86A0,
    TextureCompressed = 0x86A1,
    TextureDepthSize = 0x884A,
    DepthTextureMode = 0x884B,
    TextureCompareMode = 0x884C,
    TextureCompareFunc = 0x884D,
    TextureStencilSize = 0x88F1,
    TextureRedType = 0x8C10,
    TextureGreenType = 0x8C11,
    TextureBlueType = 0x8C12,
    TextureAlphaType = 0x8C13,
    TextureLuminanceType = 0x8C14,
    TextureIntensityType = 0x8C15,
    TextureDepthType = 0x8C16,
    TextureSharedSize = 0x8C3F,
    TextureSamples = 0x9106,
    TextureFixedSampleLocations = 0x9107,
    TextureBufferOffset = 0x919D
}

internal enum GetTextureLevelParameter
{
    TextureWidth = 0x1000,
    TextureHeight = 0x1001,
    TextureDepth = 0x8071,
    TextureInternalFormat = 0x1003,
    TextureRedSize = 0x805C,
    TextureGreenSize = 0x805D,
    TextureBlueSize = 0x805E,
    TextureAlphaSize = 0x805F,
    TextureDepthSize = 0x884A,
    TextureCompressed = 0x86A1,
    TextureCompressedImageSize = 0x86A0,
    TextureBufferOffset = 0x919D
}

internal enum GraphicResetStatus
{
    NoError = 0,
    GuiltyContextReset = 0x8253,
    InnocentContextReset = 0x8254,
    UnknownContextReset = 0x8255
}

internal enum HintMode
{
    DontCare = 0x1100,
    Fastest = 0x1101,
    Nicest = 0x1102
}

internal enum HintTarget
{
    PerspectiveCorrectionHint = 0x0C50,
    PointSmoothHint = 0x0C51,
    LineSmoothHint = 0x0C52,
    PolygonSmoothHint = 0x0C53,
    FogHint = 0x0C54,
    PackCmykHintExt = 0x800E,
    UnpackCmykHintExt = 0x800F,
    TextureMultiBufferHintSgix = 0x812E,
    GenerateMipmapHint = 0x8192,
    GenerateMipmapHintSgis = 0x8192,
    ConvolutionHintSgix = 0x8316,
    VertexPreclipHintSgix = 0x83EF,
    TextureCompressionHint = 0x84EF,
    FragmentShaderDerivativeHint = 0x8B8B
}

internal enum LogicOp
{
    Clear = 0x1500,
    And = 0x1501,
    AndReverse = 0x1502,
    Copy = 0x1503,
    AndInverted = 0x1504,
    Noop = 0x1505,
    Xor = 0x1506,
    Or = 0x1507,
    Nor = 0x1508,
    Equiv = 0x1509,
    Invert = 0x150A,
    OrReverse = 0x150B,
    CopyInverted = 0x150C,
    OrInverted = 0x150D,
    Nand = 0x150E,
    Set = 0x150F
}

internal enum MaterialFace
{
    Front = 0x0404,
    Back = 0x0405,
    FrontAndBack = 0x0408
}

internal enum NvTransformFeedback2
{
    TransformFeedbackNv = 0x8E22,
    TransformFeedbackBufferPausedNv = 0x8E23,
    TransformFeedbackBufferActiveNv = 0x8E24,
    TransformFeedbackBindingNv = 0x8E25
}

internal enum ObjectLabel
{
    Buffer = 0x82E0,
    Shader = 0x82E1,
    Program = 0x82E2,
    VertexArray = 0x8074,
    Query = 0x82E3,
    ProgramPipeline = 0x82E4,
    TransformFeedback = 0x8E22,
    Sampler = 0x82E6,
    Texture = 0x1702,
    RenderBuffer = 0x8D41,
    FrameBuffer = 0x8D40
}

internal enum PixelFormat
{
    ColorIndex = 0x1900,
    StencilIndex = 0x1901,
    DepthComponent = 0x1902,
    Red = 0x1903,
    Green = 0x1904,
    Blue = 0x1905,
    Alpha = 0x1906,
    Rgb = 0x1907,
    Rgba = 0x1908,
    Luminance = 0x1909,
    LuminanceAlpha = 0x190A,
    AbgrExt = 0x8000,
    CmykExt = 0x800C,
    CmykaExt = 0x800D,
    Bgr = 0x80E0,
    Bgra = 0x80E1,
    Ycrcb422Sgix = 0x81BB,
    Ycrcb444Sgix = 0x81BC,
    Rg = 0x8227,
    RgInteger = 0x8228,
    DepthStencil = 0x84F9,
    RedInteger = 0x8D94,
    GreenInteger = 0x8D95,
    BlueInteger = 0x8D96,
    AlphaInteger = 0x8D97,
    RgbInteger = 0x8D98,
    RgbaInteger = 0x8D99,
    BgrInteger = 0x8D9A,
    BgraInteger = 0x8D9B
}

internal enum PixelInternalFormat
{
    DepthComponent = 0x1902,
    Alpha = 0x1906,
    Rgb = 0x1907,
    Rgba = 0x1908,
    Luminance = 0x1909,
    LuminanceAlpha = 0x190A,
    R3G3B2 = 0x2A10,
    Alpha4 = 0x803B,
    Alpha8 = 0x803C,
    Alpha12 = 0x803D,
    Alpha16 = 0x803E,
    Luminance4 = 0x803F,
    Luminance8 = 0x8040,
    Luminance12 = 0x8041,
    Luminance16 = 0x8042,
    Luminance4Alpha4 = 0x8043,
    Luminance6Alpha2 = 0x8044,
    Luminance8Alpha8 = 0x8045,
    Luminance12Alpha4 = 0x8046,
    Luminance12Alpha12 = 0x8047,
    Luminance16Alpha16 = 0x8048,
    Intensity = 0x8049,
    Intensity4 = 0x804A,
    Intensity8 = 0x804B,
    Intensity12 = 0x804C,
    Intensity16 = 0x804D,
    Rgb2Ext = 0x804E,
    Rgb4 = 0x804F,
    Rgb5 = 0x8050,
    Rgb8 = 0x8051,
    Rgb10 = 0x8052,
    Rgb12 = 0x8053,
    Rgb16 = 0x8054,
    Rgba2 = 0x8055,
    Rgba4 = 0x8056,
    Rgb5A1 = 0x8057,
    Rgba8 = 0x8058,
    Rgb10A2 = 0x8059,
    Rgba12 = 0x805A,
    Rgba16 = 0x805B,
    DualAlpha4Sgis = 0x8110,
    DualAlpha8Sgis = 0x8111,
    DualAlpha12Sgis = 0x8112,
    DualAlpha16Sgis = 0x8113,
    DualLuminance4Sgis = 0x8114,
    DualLuminance8Sgis = 0x8115,
    DualLuminance12Sgis = 0x8116,
    DualLuminance16Sgis = 0x8117,
    DualIntensity4Sgis = 0x8118,
    DualIntensity8Sgis = 0x8119,
    DualIntensity12Sgis = 0x811A,
    DualIntensity16Sgis = 0x811B,
    DualLuminanceAlpha4Sgis = 0x811C,
    DualLuminanceAlpha8Sgis = 0x811D,
    QuadAlpha4Sgis = 0x811E,
    QuadAlpha8Sgis = 0x811F,
    QuadLuminance4Sgis = 0x8120,
    QuadLuminance8Sgis = 0x8121,
    QuadIntensity4Sgis = 0x8122,
    QuadIntensity8Sgis = 0x8123,
    DepthComponent16 = 0x81a5,
    DepthComponent16Sgix = 0x81A5,
    DepthComponent24 = 0x81a6,
    DepthComponent24Sgix = 0x81A6,
    DepthComponent32 = 0x81a7,
    DepthComponent32Sgix = 0x81A7,
    CompressedRed = 0x8225,
    CompressedRg = 0x8226,
    R8 = 0x8229,
    R16 = 0x822A,
    Rg8 = 0x822B,
    Rg16 = 0x822C,
    R16f = 0x822D,
    R32f = 0x822E,
    Rg16f = 0x822F,
    Rg32f = 0x8230,
    R8i = 0x8231,
    R8ui = 0x8232,
    R16i = 0x8233,
    R16ui = 0x8234,
    R32i = 0x8235,
    R32ui = 0x8236,
    Rg8i = 0x8237,
    Rg8ui = 0x8238,
    Rg16i = 0x8239,
    Rg16ui = 0x823A,
    Rg32i = 0x823B,
    Rg32ui = 0x823C,
    CompressedRgbS3tcDxt1Ext = 0x83F0,
    CompressedRgbaS3tcDxt1Ext = 0x83F1,
    CompressedRgbaS3tcDxt3Ext = 0x83F2,
    CompressedRgbaS3tcDxt5Ext = 0x83F3,
    CompressedAlpha = 0x84E9,
    CompressedLuminance = 0x84EA,
    CompressedLuminanceAlpha = 0x84EB,
    CompressedIntensity = 0x84EC,
    CompressedRgb = 0x84ED,
    CompressedRgba = 0x84EE,
    DepthStencil = 0x84F9,
    Rgba32f = 0x8814,
    Rgb32f = 0x8815,
    Rgba16f = 0x881A,
    Rgb16f = 0x881B,
    Depth24Stencil8 = 0x88F0,
    R11fG11fB10f = 0x8C3A,
    Rgb9E5 = 0x8C3D,
    Srgb = 0x8C40,
    Srgb8 = 0x8C41,
    SrgbAlpha = 0x8C42,
    Srgb8Alpha8 = 0x8C43,
    SluminanceAlpha = 0x8C44,
    Sluminance8Alpha8 = 0x8C45,
    Sluminance = 0x8C46,
    Sluminance8 = 0x8C47,
    CompressedSrgb = 0x8C48,
    CompressedSrgbAlpha = 0x8C49,
    CompressedSluminance = 0x8C4A,
    CompressedSluminanceAlpha = 0x8C4B,
    CompressedSrgbS3tcDxt1Ext = 0x8C4C,
    CompressedSrgbAlphaS3tcDxt1Ext = 0x8C4D,
    CompressedSrgbAlphaS3tcDxt3Ext = 0x8C4E,
    CompressedSrgbAlphaS3tcDxt5Ext = 0x8C4F,
    DepthComponent32f = 0x8CAC,
    Depth32fStencil8 = 0x8CAD,
    Rgba32ui = 0x8D70,
    Rgb32ui = 0x8D71,
    Rgba16ui = 0x8D76,
    Rgb16ui = 0x8D77,
    Rgba8ui = 0x8D7C,
    Rgb8ui = 0x8D7D,
    Rgba32i = 0x8D82,
    Rgb32i = 0x8D83,
    Rgba16i = 0x8D88,
    Rgb16i = 0x8D89,
    Rgba8i = 0x8D8E,
    Rgb8i = 0x8D8F,
    Float32UnsignedInt248Rev = 0x8DAD,
    CompressedRedRgtc1 = 0x8DBB,
    CompressedSignedRedRgtc1 = 0x8DBC,
    CompressedRgRgtc2 = 0x8DBD,
    CompressedSignedRgRgtc2 = 0x8DBE,
    One = 1,
    Two = 2,
    Three = 3,
    Four = 4
}

internal enum PixelStoreParameter
{
    UnpackSwapBytes = 0x0CF0,
    UnpackLsbFirst = 0x0CF1,
    UnpackRowLength = 0x0CF2,
    UnpackSkipRows = 0x0CF3,
    UnpackSkipPixels = 0x0CF4,
    UnpackAlignment = 0x0CF5,
    PackSwapBytes = 0x0D00,
    PackLsbFirst = 0x0D01,
    PackRowLength = 0x0D02,
    PackSkipRows = 0x0D03,
    PackSkipPixels = 0x0D04,
    PackAlignment = 0x0D05,
    PackSkipImages = 0x806B,
    PackSkipImagesExt = 0x806B,
    PackImageHeight = 0x806C,
    PackImageHeightExt = 0x806C,
    UnpackSkipImages = 0x806D,
    UnpackSkipImagesExt = 0x806D,
    UnpackImageHeight = 0x806E,
    UnpackImageHeightExt = 0x806E,
    PackSkipVolumesSgis = 0x8130,
    PackImageDepthSgis = 0x8131,
    UnpackSkipVolumesSgis = 0x8132,
    UnpackImageDepthSgis = 0x8133,
    PixelTileWidthSgix = 0x8140,
    PixelTileHeightSgix = 0x8141,
    PixelTileGridWidthSgix = 0x8142,
    PixelTileGridHeightSgix = 0x8143,
    PixelTileGridDepthSgix = 0x8144,
    PixelTileCacheSizeSgix = 0x8145,
    PackResampleSgix = 0x842C,
    UnpackResampleSgix = 0x842D,
    PackSubsampleRateSgix = 0x85A0,
    UnpackSubsampleRateSgix = 0x85A1
}

internal enum PixelType
{
    Byte = 0x1400,
    UnsignedByte = 0x1401,
    Short = 0x1402,
    UnsignedShort = 0x1403,
    Int = 0x1404,
    UnsignedInt = 0x1405,
    Float = 0x1406,
    HalfFloat = 0x140B,
    Bitmap = 0x1A00,
    UnsignedByte332 = 0x8032,
    UnsignedByte332Ext = 0x8032,
    UnsignedShort4444 = 0x8033,
    UnsignedShort4444Ext = 0x8033,
    UnsignedShort5551 = 0x8034,
    UnsignedShort5551Ext = 0x8034,
    UnsignedInt8888 = 0x8035,
    UnsignedInt8888Ext = 0x8035,
    UnsignedInt1010102 = 0x8036,
    UnsignedInt1010102Ext = 0x8036,
    UnsignedByte233Reversed = 0x8362,
    UnsignedShort565 = 0x8363,
    UnsignedShort565Reversed = 0x8364,
    UnsignedShort4444Reversed = 0x8365,
    UnsignedShort1555Reversed = 0x8366,
    UnsignedInt8888Reversed = 0x8367,
    UnsignedInt2101010Reversed = 0x8368,
    UnsignedInt248 = 0x84FA,
    UnsignedInt10F11F11FRev = 0x8C3B,
    UnsignedInt5999Rev = 0x8C3E,
    Float32UnsignedInt248Rev = 0x8DAD
}

internal enum PointParameterName
{
    PointSizeMin = 0x8126,
    PointSizeMax = 0x8127,
    PointFadeThresholdSize = 0x8128,
    PointDistanceAttenuation = 0x8129,
    PointSpriteCoordOrigin = 0x8CA0
}

internal enum PolygonMode
{
    Point = 0x1B00,
    Line = 0x1B01,
    Fill = 0x1B02
}

internal enum ProgramInterface
{
    Uniform = 0x92E1,
    UniformBlock = 0x92E2,
    AtomicCounterBuffer = 0x92C0,
    ProgramInput = 0x92E3,
    ProgramOutput = 0x92E4,
    VertexSubroutine = 0x92E8,
    TessControlSubroutine = 0x92E9,
    TessEvaluationSubroutine = 0x92EA,
    GeometrySubroutine = 0x92EB,
    FragmentSubroutine = 0x92EC,
    ComputeSubroutine = 0x92ED,
    VertexSubroutineUniform = 0x92EE,
    TessControlSubroutineUniform = 0x92EF,
    TessEvaluationSubroutineUniform = 0x92F0,
    GeometrySubroutineUniform = 0x92F1,
    FragmentSubroutineUniform = 0x92F2,
    ComputeSubroutineUniform = 0x92F3,
    TransformFeedbackVarying = 0x92F4,
    BufferVariable = 0x92E5,
    ShaderStorageBlock = 0x92E6,
    TransformFeedbackBuffer = 0x8C8E
}

internal enum ProgramInterfaceParameterName
{
    ActiveResources = 0x92F5,
    MaxNameLength = 0x92F6,
    MaxNumActiveVariables = 0x92F7,
    MaxNumCompatibleSubroutines = 0x92F8
}

internal enum ProgramParameter
{
    ActiveUniformBlockMaxNameLength = 0x8A35,
    ActiveUniformBlocks = 0x8A36,
    DeleteStatus = 0x8B80,
    LinkStatus = 0x8B82,
    ValidateStatus = 0x8B83,
    InfoLogLength = 0x8B84,
    AttachedShaders = 0x8B85,
    ActiveUniforms = 0x8B86,
    ActiveUniformMaxLength = 0x8B87,
    ActiveAttributes = 0x8B89,
    ActiveAttributeMaxLength = 0x8B8A,
    TransformFeedbackVaryingMaxLength = 0x8C76,
    TransformFeedbackBufferMode = 0x8C7F,
    TransformFeedbackVaryings = 0x8C83,
    GeometryVerticesOut = 0x8DDA,
    GeometryInputType = 0x8DDB,
    GeometryOutputType = 0x8DDC
}

internal enum ProgramResourceParameterName
{
    NameLength = 0x92F9,
    Type = 0x92FA,
    ArraySize = 0x92FB,
    Offset = 0x92FC,
    BlockIndex = 0x92FD,
    ArrayStride = 0x92FE,
    MatrixStride = 0x92FF,
    IsRowMajor = 0x9300,
    AtomicCounterBufferIndex = 0x9301,
    TextureBuffer = 0x8C2A,
    BufferBinding = 0x9302,
    BufferDataSize = 0x9303,
    NumActiveVariables = 0x9304,
    ActiveVariables = 0x9305,
    ReferencedByVertexShader = 0x9306,
    ReferencedByTessControlShader = 0x9307,
    ReferencedByTessEvaluationShader = 0x9308,
    ReferencedByGeometryShader = 0x9309,
    ReferencedByFragmentShader = 0x930A,
    ReferencedByComputeShader = 0x930B,
    NumCompatibleSubroutines = 0x8E4A,
    CompatibleSubroutines = 0x8E4B,
    TopLevelArraySize = 0x930C,
    TopLevelArrayStride = 0x930D,
    Location = 0x930E,
    LocationIndex = 0x930F,
    IsPerPatch = 0x92E7,
    LocationComponent = 0x934A,
    TransformFeedbackBufferIndex = 0x934B,
    TransformFeedbackBufferStride = 0x934C
}

internal enum ProgramStageParameterName
{
    ActiveSubroutineUniforms = 0x8DE6,
    ActiveSubroutineUniformLocations = 0x8E47,
    ActiveSubroutines = 0x8DE5,
    ActiveSubroutineUniformMaxLength = 0x8E49,
    ActiveSubroutineMaxLength = 0x8E48
}

internal enum ProvokingVertexMode
{
    FirstVertexConvention = 0x8E4D,
    LastVertexConvention = 0x8E4E
}

internal enum QueryTarget
{
    SamplesPassed = 0x8914,
    PrimitivesGenerated = 0x8C87,
    TransformFeedbackPrimitivesWritten = 0x8C88,
    AnySamplesPassed = 0x8C2F,
    AnySamplesPassedConservative = 0x8D6A,
    TimeElapsed = 0x88BF,
    TimeStamp = 0x8E28
}

internal enum ReadBufferMode
{
    None = 0x0000,
    FrontLeft = 0x0400,
    FrontRight = 0x0401,
    BackLeft = 0x0402,
    BackRight = 0x0403,
    Front = 0x0404,
    Back = 0x0405,
    Left = 0x0406,
    Right = 0x0407,
    ColorAttachment0 = 0x8CE0,
    ColorAttachment1 = 0x8CE1,
    ColorAttachment2 = 0x8CE2,
    ColorAttachment3 = 0x8CE3,
    ColorAttachment4 = 0x8CE4,
    ColorAttachment5 = 0x8CE5,
    ColorAttachment6 = 0x8CE6,
    ColorAttachment7 = 0x8CE7,
    ColorAttachment8 = 0x8CE8,
    ColorAttachment9 = 0x8CE9,
    ColorAttachment10 = 0x8CEA,
    ColorAttachment11 = 0x8CEB,
    ColorAttachment12 = 0x8CEC,
    ColorAttachment13 = 0x8CED,
    ColorAttachment14 = 0x8CEE,
    ColorAttachment15 = 0x8CEF
}

internal enum RenderbufferParameterName
{
    RenderbufferSamples = 0x8CAB,
    RenderbufferWidth = 0x8D42,
    RenderbufferWidthExt = 0x8D42,
    RenderbufferHeight = 0x8D43,
    RenderbufferHeightExt = 0x8D43,
    RenderbufferInternalFormat = 0x8D44,
    RenderbufferInternalFormatExt = 0x8D44,
    RenderbufferRedSize = 0x8D50,
    RenderbufferRedSizeExt = 0x8D50,
    RenderbufferGreenSize = 0x8D51,
    RenderbufferGreenSizeExt = 0x8D51,
    RenderbufferBlueSize = 0x8D52,
    RenderbufferBlueSizeExt = 0x8D52,
    RenderbufferAlphaSize = 0x8D53,
    RenderbufferAlphaSizeExt = 0x8D53,
    RenderbufferDepthSize = 0x8D54,
    RenderbufferDepthSizeExt = 0x8D54,
    RenderbufferStencilSize = 0x8D55,
    RenderbufferStencilSizeExt = 0x8D55
}

internal enum RenderbufferStorage
{
    R3G3B2 = 0x2A10,
    Alpha4 = 0x803B,
    Alpha8 = 0x803C,
    Alpha12 = 0x803D,
    Alpha16 = 0x803E,
    Rgb4 = 0x804F,
    Rgb5 = 0x8050,
    Rgb8 = 0x8051,
    Rgb10 = 0x8052,
    Rgb12 = 0x8053,
    Rgb16 = 0x8054,
    Rgba2 = 0x8055,
    Rgba4 = 0x8056,
    Rgba8 = 0x8058,
    Rgb10A2 = 0x8059,
    Rgba12 = 0x805A,
    Rgba16 = 0x805B,
    DepthComponent16 = 0x81a5,
    DepthComponent24 = 0x81a6,
    DepthComponent32 = 0x81a7,
    R8 = 0x8229,
    R16 = 0x822A,
    Rg8 = 0x822B,
    Rg16 = 0x822C,
    R16f = 0x822D,
    R32f = 0x822E,
    Rg16f = 0x822F,
    Rg32f = 0x8230,
    R8i = 0x8231,
    R8ui = 0x8232,
    R16i = 0x8233,
    R16ui = 0x8234,
    R32i = 0x8235,
    R32ui = 0x8236,
    Rg8i = 0x8237,
    Rg8ui = 0x8238,
    Rg16i = 0x8239,
    Rg16ui = 0x823A,
    Rg32i = 0x823B,
    Rg32ui = 0x823C,
    Rgba32f = 0x8814,
    Rgb32f = 0x8815,
    Rgba16f = 0x881A,
    Rgb16f = 0x881B,
    Depth24Stencil8 = 0x88F0,
    R11fG11fB10f = 0x8C3A,
    Rgb9E5 = 0x8C3D,
    Srgb8 = 0x8C41,
    Srgb8Alpha8 = 0x8C43,
    DepthComponent32f = 0x8CAC,
    Depth32fStencil8 = 0x8CAD,
    StencilIndex1 = 0x8D46,
    StencilIndex1Ext = 0x8D46,
    StencilIndex4 = 0x8D47,
    StencilIndex4Ext = 0x8D47,
    StencilIndex8 = 0x8D48,
    StencilIndex8Ext = 0x8D48,
    StencilIndex16 = 0x8D49,
    StencilIndex16Ext = 0x8D49,
    Rgba32ui = 0x8D70,
    Rgb32ui = 0x8D71,
    Rgba16ui = 0x8D76,
    Rgb16ui = 0x8D77,
    Rgba8ui = 0x8D7C,
    Rgb8ui = 0x8D7D,
    Rgba32i = 0x8D82,
    Rgb32i = 0x8D83,
    Rgba16i = 0x8D88,
    Rgb16i = 0x8D89,
    Rgba8i = 0x8D8E,
    Rgb8i = 0x8D8F
}

internal enum RenderbufferTarget
{
    Renderbuffer = 0x8D41
}

internal enum ShaderParameter
{
    ShaderType = 0x8B4F,
    DeleteStatus = 0x8B80,
    CompileStatus = 0x8B81,
    InfoLogLength = 0x8B84,
    ShaderSourceLength = 0x8B88
}

internal enum ShaderType
{
    FragmentShader = 0x8B30,
    VertexShader = 0x8B31,
    GeometryShader = 0x8DD9,
    TessControlShader = 0x8E88,
    TessEvaluationShader = 0x8E87,
    ComputeShader = 0x91B9
}

internal enum SizedInternalFormat
{
    Rgba8 = 0x8058,
    Rgba16 = 0x805B,
    R8 = 0x8229,
    R16 = 0x822A,
    Rg8 = 0x822B,
    Rg16 = 0x822C,
    R16f = 0x822D,
    R32f = 0x822E,
    Rg16f = 0x822F,
    Rg32f = 0x8230,
    R8i = 0x8231,
    R8ui = 0x8232,
    R16i = 0x8233,
    R16ui = 0x8234,
    R32i = 0x8235,
    R32ui = 0x8236,
    Rg8i = 0x8237,
    Rg8ui = 0x8238,
    Rg16i = 0x8239,
    Rg16ui = 0x823A,
    Rg32i = 0x823B,
    Rg32ui = 0x823C,
    Rgba32f = 0x8814,
    Rgba16f = 0x881A,
    Rgba32ui = 0x8D70,
    Rgba16ui = 0x8D76,
    Rgba8ui = 0x8D7C,
    Rgba32i = 0x8D82,
    Rgba16i = 0x8D88,
    Rgba8i = 0x8D8E
}

internal enum StencilFace
{
    Front = 0x0404,
    Back = 0x0405,
    FrontAndBack = 0x0408
}

internal enum StencilFunction
{
    Never = 0x0200,
    Less = 0x0201,
    Equal = 0x0202,
    Lequal = 0x0203,
    Greater = 0x0204,
    Notequal = 0x0205,
    Gequal = 0x0206,
    Always = 0x0207
}

internal enum StencilOp
{
    Zero = 0,
    Invert = 0x150A,
    Keep = 0x1E00,
    Replace = 0x1E01,
    Incr = 0x1E02,
    Decr = 0x1E03,
    IncrWrap = 0x8507,
    DecrWrap = 0x8508
}

internal enum StringName
{
    Vendor = 0x1F00,
    Renderer = 0x1F01,
    Version = 0x1F02,
    Extensions = 0x1F03,
    ShadingLanguageVersion = 0x8B8C
}

internal enum SubroutineParameterName
{
    NumCompatibleSubroutines = 0x8E4A,
    CompatibleSubroutines = 0x8E4B,
    UniformSize = 0x8A38,
    UniformNameLength = 0x8A39
}

internal enum TextureBufferTarget
{
    TextureBuffer = 0x8C2A
}

internal enum TextureParameter
{
    Nearest = 0x2600,
    Linear = 0x2601,
    NearestMipMapNearest = 0x2700,
    LinearMipMapNearest = 0x2701,
    NearestMipMapLinear = 0x2702,
    LinearMipMapLinear = 0x2703,
    ClampToEdge = 0x812F,
    ClampToBorder = 0x812D,
    MirrorClampToEdge = 0x8743,
    MirroredRepeat = 0x8370,
    Repeat = 0x2901,
    Red = 0x1903,
    Green = 0x1904,
    Blue = 0x1905,
    Alpha = 0x1906,
    Zero = 0,
    One = 1,
    CompareRefToTexture = 0x884E,
    None = 0,
    StencilIndex = 0x1901,
    DepthComponent = 0x1902,
    MaxAnisotropyExt = 0x84FE
}

internal enum TextureParameterName
{
    TextureBaseLevel = 0x813C,
    TextureBorderColor = 0x1004,
    TextureCompareMode = 0x884C,
    TextureCompareFunc = 0x884D,
    TextureLodBias = 0x8501,
    TextureMagFilter = 0x2800,
    TextureMaxLevel = 0x813D,
    TextureMaxLod = 0x813B,
    TextureMinFilter = 0x2801,
    TextureMinLod = 0x813A,
    TextureSwizzleR = 0x8E42,
    TextureSwizzleG = 0x8E43,
    TextureSwizzleB = 0x8E44,
    TextureSwizzleA = 0x8E45,
    TextureSwizzleRGBA = 0x8E46,
    TextureWrapS = 0x2802,
    TextureWrapT = 0x2803,
    TextureWrapR = 0x8072,
    MaxAnisotropyExt = 0x84FE
}

internal enum TextureTarget
{
    Texture1D = 0x0DE0,
    Texture2D = 0x0DE1,
    Texture3D = 0x806F,
    Texture1DArray = 0x8C18,
    Texture2DArray = 0x8C1A,
    TextureRectangle = 0x84F5,
    TextureCubeMap = 0x8513,
    TextureCubeMapPositiveX = 0x8515,
    TextureCubeMapNegativeX = 0x8516,
    TextureCubeMapPositiveY = 0x8517,
    TextureCubeMapNegativeY = 0x8518,
    TextureCubeMapPositiveZ = 0x8519,
    TextureCubeMapNegativeZ = 0x851A,
    TextureCubeMapArray = 0x9009,
    Texture2DMultisample = 0x9100,
    Texture2DMultisampleArray = 0x9102
}

internal enum TextureTargetMultisample
{
    Texture2DMultisample = 0x9100,
    ProxyTexture2DMultisample = 0x9101,
    Texture2DMultisampleArray = 0x9102,
    ProxyTexture2DMultisampleArray = 0x9103
}

[Obsolete(
    "The TextureUnit enum is deprecated and may be removed in a future build.  Use ActiveTexture(Int32) instead, which will automatically offset your texture by the GL_TEXTURE0."
)]
internal enum TextureUnit
{
    Texture0 = 0x84C0,
    Texture1 = 0x84C1,
    Texture2 = 0x84C2,
    Texture3 = 0x84C3,
    Texture4 = 0x84C4,
    Texture5 = 0x84C5,
    Texture6 = 0x84C6,
    Texture7 = 0x84C7,
    Texture8 = 0x84C8,
    Texture9 = 0x84C9,
    Texture10 = 0x84CA,
    Texture11 = 0x84CB,
    Texture12 = 0x84CC,
    Texture13 = 0x84CD,
    Texture14 = 0x84CE,
    Texture15 = 0x84CF,
    Texture16 = 0x84D0,
    Texture17 = 0x84D1,
    Texture18 = 0x84D2,
    Texture19 = 0x84D3,
    Texture20 = 0x84D4,
    Texture21 = 0x84D5,
    Texture22 = 0x84D6,
    Texture23 = 0x84D7,
    Texture24 = 0x84D8,
    Texture25 = 0x84D9,
    Texture26 = 0x84DA,
    Texture27 = 0x84DB,
    Texture28 = 0x84DC,
    Texture29 = 0x84DD,
    Texture30 = 0x84DE,
    Texture31 = 0x84DF
}

internal enum TransformFeedbackMode
{
    InterleavedAttribs = 0x8C8C,
    SeparateAttribs = 0x8C8D
}

internal enum TransformFeedbackParameterName
{
    TransformFeedbackBufferBinding = 0x8C8F,
    TransformFeedbackBufferStart = 0x8C84,
    TransformFeedbackBufferSize = 0x8C85,
    TransformFeedbackPaused = 0x8E23,
    TransformFeedbackActive = 0x8E24
}

internal enum Version32
{
    ContextCoreProfileBit = 0x00000001,
    SyncFlushCommandsBit = 0x00000001,
    ContextCompatibilityProfileBit = 0x00000002,
    LinesAdjacency = 0x000A,
    LineStripAdjacency = 0x000B,
    TrianglesAdjacency = 0x000C,
    TriangleStripAdjacency = 0x000D,
    ProgramPointSize = 0x8642,
    DepthClamp = 0x864F,
    TextureCubeMapSeamless = 0x884F,
    GeometryVerticesOut = 0x8916,
    GeometryInputType = 0x8917,
    GeometryOutputType = 0x8918,
    MaxVaryingComponents = 0x8B4B,
    MaxGeometryTextureImageUnits = 0x8C29,
    FramebufferAttachmentTextureLayer = 0x8CD4,
    FramebufferAttachmentLayered = 0x8DA7,
    FramebufferIncompleteLayerTargets = 0x8DA8,
    GeometryShader = 0x8DD9,
    MaxGeometryUniformComponents = 0x8DDF,
    MaxGeometryOutputVertices = 0x8DE0,
    MaxGeometryTotalOutputComponents = 0x8DE1,
    QuadsFollowProvokingVertexConvention = 0x8E4C,
    FirstVertexConvention = 0x8E4D,
    LastVertexConvention = 0x8E4E,
    ProvokingVertex = 0x8E4F,
    SamplePosition = 0x8E50,
    SampleMask = 0x8E51,
    SampleMaskValue = 0x8E52,
    MaxSampleMaskWords = 0x8E59,
    Texture2DMultisample = 0x9100,
    ProxyTexture2DMultisample = 0x9101,
    Texture2DMultisampleArray = 0x9102,
    ProxyTexture2DMultisampleArray = 0x9103,
    TextureBinding2DMultisample = 0x9104,
    TextureBinding2DMultisampleArray = 0x9105,
    TextureSamples = 0x9106,
    TextureFixedSampleLocations = 0x9107,
    Sampler2DMultisample = 0x9108,
    IntSampler2DMultisample = 0x9109,
    UnsignedIntSampler2DMultisample = 0x910A,
    Sampler2DMultisampleArray = 0x910B,
    IntSampler2DMultisampleArray = 0x910C,
    UnsignedIntSampler2DMultisampleArray = 0x910D,
    MaxColorTextureSamples = 0x910E,
    MaxDepthTextureSamples = 0x910F,
    MaxIntegerSamples = 0x9110,
    MaxServerWaitTimeout = 0x9111,
    ObjectType = 0x9112,
    SyncCondition = 0x9113,
    SyncStatus = 0x9114,
    SyncFlags = 0x9115,
    SyncFence = 0x9116,
    SyncGpuCommandsComplete = 0x9117,
    Unsignaled = 0x9118,
    Signaled = 0x9119,
    AlreadySignaled = 0x911A,
    TimeoutExpired = 0x911B,
    ConditionSatisfied = 0x911C,
    WaitFailed = 0x911D,
    MaxVertexOutputComponents = 0x9122,
    MaxGeometryInputComponents = 0x9123,
    MaxGeometryOutputComponents = 0x9124,
    MaxFragmentInputComponents = 0x9125,
    ContextProfileMask = 0x9126,
    TimeoutIgnored = unchecked((int)0xFFFFFFFFFFFFFFFF)
}

internal enum VertexAttribParameter
{
    ArrayEnabled = 0x8622,
    ArraySize = 0x8623,
    ArrayStride = 0x8624,
    ArrayType = 0x8625,
    CurrentVertexAttrib = 0x8626,
    ArrayNormalized = 0x886A,
    VertexAttribArrayInteger = 0x88FD,
    ArrayLong = 0x874E,
    ArrayDivisor = 0x88FE,
    RelativeOffset = 0x82D5
}

internal enum VertexAttribPointerParameter
{
    ArrayPointer = 0x8645
}

internal enum VertexAttribFormat
{
    Byte = 0x1400,
    UnsignedByte = 0x1401,
    Short = 0x1402,
    UnsignedShort = 0x1403,
    Int = 0x1404,
    UnsignedInt = 0x1405,
    Float = 0x1406,
    Double = 0x140A,
    HalfFloat = 0x140B,
    UnsignedUInt2101010Reversed = 0x8368,
    UnsignedInt2101010Reversed = 0x8D9F,
    UnsignedUInt101111Reversed = 0x8C3B
}

internal enum VertexAttribPType
{
    UnsignedUInt2101010Reversed = 0x8368,
    UnsignedInt2101010Reversed = 0x8D9F
}

internal enum VertexAttribPointerType
{
    Byte = 0x1400,
    UnsignedByte = 0x1401,
    Short = 0x1402,
    UnsignedShort = 0x1403,
    Int = 0x1404,
    UnsignedInt = 0x1405,
    Float = 0x1406,
    Double = 0x140A,
    HalfFloat = 0x140B,
    UnsignedUInt2101010Reversed = 0x8368,
    UnsignedInt2101010Reversed = 0x8D9F,
    UnsignedUInt101111Reversed = 0x8C3B
}
#pragma warning restore
